{"version":3,"file":"static/js/570.4c2b6faa.chunk.js","mappings":"8PAiCA,EA9BgB,SAAHA,GAQN,IAPNC,EAAKD,EAALC,MAQMC,GAAWC,EAAAA,EAAAA,MAEjB,OACCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACvBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,SACpBL,EAAMM,KAAI,SAACC,EAAMC,GAAC,OAClBC,EAAAA,EAAAA,MAAA,OACCL,UAAU,OACVM,SAAU,EAEVC,QAAS,kBAAMV,EAASM,EAAKK,OAAO,EAACP,SAAA,EAErCF,EAAAA,EAAAA,KAACI,EAAKM,KAAI,CAACC,SAAS,WACpBX,EAAAA,EAAAA,KAAA,QAAMC,UAAU,QAAOC,SAAEE,EAAKQ,UAJzBP,EAKA,OAKX,E,UC/BYQ,EAAQ,SAARA,GAAQ,OAARA,EAAQ,cAARA,EAAQ,2BAARA,CAAQ,M,kDCcpB,EAXqB,SAAHjB,GAAsC,IAAhCkB,EAAIlB,EAAJkB,KACvB,OACCd,EAAAA,EAAAA,KAAA,QACCe,MAAO,CAAEC,gBAAiBF,IAASD,EAASI,MAAQ,MAAQ,SAC5DhB,UAAU,OAAMC,SAEfY,GAGJ,ECyBA,EAjCgB,SAAHlB,GAMN,IALNsB,EAAItB,EAAJsB,KACAC,EAAQvB,EAARuB,SAKAC,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAEpC,OACChB,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,MAAAE,SAAKgB,EAAKQ,QACV1B,EAAAA,EAAAA,KAAA,MACCC,UAAU,kBACVO,QAAS,WACRiB,GAAgB,GAChBE,YAAW,kBAAMF,GAAgB,EAAM,GAAE,IAC1C,EAAEvB,SAEDsB,EAAeN,EAAKU,SAAWV,EAAKW,YAEtC7B,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,KAAC8B,EAAY,CAAChB,KAAMI,EAAKJ,UAE1Bd,EAAAA,EAAAA,KAAA,MAAAE,UACCF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAeO,QAAS,kBAAMW,EAASD,EAAK,EAAChB,SAAC,eAMpE,EC4FA,EAzHc,SAAHN,GAQJ,IAPNmC,EAAKnC,EAALmC,MACAZ,EAAQvB,EAARuB,SACAa,EAASpC,EAAToC,UAMAZ,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCa,EAAOX,EAAA,GAAEY,EAAUZ,EAAA,GAC1Ba,GAAsCd,EAAAA,EAAAA,UAAS,IAAGe,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAsClB,EAAAA,EAAAA,UAAS,IAAGmB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAgCtB,EAAAA,EAAAA,UAAS,IAAGuB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA8B1B,EAAAA,EAAAA,UAASR,EAASmC,cAAaC,GAAA1B,EAAAA,EAAAA,GAAAwB,EAAA,GAAtDG,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,GAAgBC,EAAAA,EAAAA,QAAiC,MA0BvD,OACC/C,EAAAA,EAAAA,MAAA,OAAKL,UAAU,iBAAgBC,SAAA,EAC9BI,EAAAA,EAAAA,MAAA,WAASL,UAAU,MAAKC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,UAAQQ,QA3BQ,WAAO,IAAD8C,EACH,QAArBA,EAAAF,EAAcG,eAAO,IAAAD,GAArBA,EAAuBE,YACvBtB,EAAW,IACXI,EAAe,IACfI,EAAe,GAChB,EAsBgCzC,UAAU,eAAcC,SAAC,cAGtDI,EAAAA,EAAAA,MAAA,UAAQmD,IAAKL,EAAclD,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAeO,QAzBjB,WAAO,IAADkD,EACJ,QAArBA,EAAAN,EAAcG,eAAO,IAAAG,GAArBA,EAAuBC,OACxB,EAuB0DzD,SAAC,WAGvDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBACJI,EAAAA,EAAAA,MAAA,QAAMsD,SAzBY,SAACC,GAAY,IAADC,EAEjC,GADAD,EAAEE,iBACc,KAAZ9B,GAAkC,KAAhBI,GAAsC,KAAhBI,EAG3C,OAFAK,EAAY,2CACZnB,YAAW,kBAAMmB,EAAY,GAAG,GAAE,KAGnCd,EACC,CAAEN,KAAMO,EAASJ,SAAUQ,EAAavB,KAAMoC,GAC9CT,GAEoB,QAArBqB,EAAAV,EAAcG,eAAO,IAAAO,GAArBA,EAAuBH,OACxB,EAakCzD,SAAA,EAC7BI,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,UACPF,EAAAA,EAAAA,KAAA,SACC0B,KAAK,OACLsC,SAAU,SAACH,GAAC,OAAK3B,EAAW2B,EAAEI,OAAOC,MAAM,EAC3CA,MAAOjC,EACPhC,UAAU,oBAGZK,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,cACPF,EAAAA,EAAAA,KAAA,SACC0B,KAAK,WACLsC,SAAU,SAACH,GAAC,OAAKvB,EAAeuB,EAAEI,OAAOC,MAAM,EAC/CA,MAAO7B,EACPpC,UAAU,oBAGZK,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,cACPF,EAAAA,EAAAA,KAAA,SACC0B,KAAK,WACLsC,SAAU,SAACH,GAAC,OAAKnB,EAAemB,EAAEI,OAAOC,MAAM,EAC/CA,MAAOzB,EACPxC,UAAU,oBAGZK,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,UACPI,EAAAA,EAAAA,MAAA,UACC0D,SAAU,SAACH,GAAC,OAAKV,EAAWU,EAAEI,OAAOC,MAAkB,EACvDA,MAAOhB,EACPjD,UAAU,wBAAuBC,SAAA,EAEjCF,EAAAA,EAAAA,KAAA,UAAQkE,MAAOrD,EAASI,MAAMf,SAAEW,EAASI,SACzCjB,EAAAA,EAAAA,KAAA,UAAQkE,MAAOrD,EAASmC,aAAa9C,SACnCW,EAASmC,sBAIbhD,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAekE,KAAK,SAAQjE,SAAC,WAI/C2C,SAGH7C,EAAAA,EAAAA,KAAA,WAASC,UAAU,OAAMC,UACxBI,EAAAA,EAAAA,MAAA,SAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,SAAAE,UACCI,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBAGNF,EAAAA,EAAAA,KAAA,SAAAE,SACE6B,EAAM5B,KAAI,SAACe,EAAMb,GAAC,OAClBL,EAAAA,EAAAA,KAACoE,EAAO,CAASlD,KAAMA,EAAMC,SAAUA,GAAzBd,EAAqC,aAO1D,E,gFC7HKgE,EAAmB,SAAnBA,GAAmB,OAAnBA,EAAmB,qBAAnBA,EAAmB,qBAAnBA,EAAmB,uBAAnBA,EAAmB,mBAAnBA,EAAmB,qBAAnBA,EAAmB,mBAAnBA,EAAmB,qBAAnBA,EAAmB,mBAAnBA,EAAmB,qBAAnBA,EAAmB,mBAAnBA,EAAmB,qBAAnBA,EAAmB,uBAAnBA,EAAmB,yBAAnBA,EAAmB,uBAAnBA,EAAmB,yBAAnBA,EAAmB,mCAAnBA,EAAmB,mCAAnBA,EAAmB,oCAAnBA,EAAmB,kCAAnBA,EAAmB,oCAAnBA,EAAmB,gCAAnBA,EAAmB,4BAAnBA,EAAmB,8BAAnBA,EAAmB,kCAAnBA,EAAmB,sCAAnBA,EAAmB,wCAAnBA,EAAmB,8BAAnBA,EAAmB,gCAAnBA,EAAmB,8BAAnBA,EAAmB,gCAAnBA,CAAmB,EAAnBA,GAAmB,IAiCnBC,EAA0B,SAA1BA,GAA0B,OAA1BA,EAA0B,oCAA1BA,EAA0B,kCAA1BA,EAA0B,oCAA1BA,EAA0B,gCAA1BA,EAA0B,4BAA1BA,EAA0B,8BAA1BA,EAA0B,kCAA1BA,EAA0B,sCAA1BA,EAA0B,wCAA1BA,EAA0B,8BAA1BA,EAA0B,gCAA1BA,EAA0B,8BAA1BA,EAA0B,gCAA1BA,CAA0B,EAA1BA,GAA0B,IAiB/B,IC2NA,EAxPmB,WAClB,IAAMC,GAAiBC,EAAAA,EAAAA,MACjBC,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAAcC,gBAE1CxD,GAA8BC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCyD,EAAOvD,EAAA,GAAEwD,EAAUxD,EAAA,GAE1Ba,GAAkCd,EAAAA,EAAAA,UAAkB,IAAGe,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAAhD4C,EAAS3C,EAAA,GAAE4C,EAAY5C,EAAA,GACxB6C,GAAaC,EAAAA,EAAAA,UAAQ,kBAAMH,EAAUI,QAAO,SAAAC,GAAK,OAAIA,EAAMC,SAAS,GAAC,GAAE,CAACN,IACxEO,GAAiBJ,EAAAA,EAAAA,UACtB,kBACCH,EAAUI,QACT,SAAAtB,GAAC,OAAKA,EAAE0B,aAAgB1B,EAAE2B,YAAwB,IAAIC,MAAOC,UAbtC,GAaoE,GAC3F,GACF,CAACX,IAEFxC,GAA0ClB,EAAAA,EAAAA,YAAiBmB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAApDoD,EAAanD,EAAA,GAAEoD,EAAgBpD,EAAA,GAChCqD,GAAsBxC,EAAAA,EAAAA,QAAiC,MACvDyC,GAAwBzC,EAAAA,EAAAA,QAAiC,MAEzD0C,EAAa,WAAO,IAADC,EACG,QAA3BA,EAAAH,EAAoBtC,eAAO,IAAAyC,GAA3BA,EAA6BxC,WAC9B,EACMyC,EAAc,WAAO,IAADC,EAAAC,EACE,QAA3BD,EAAAL,EAAoBtC,eAAO,IAAA2C,GAA3BA,EAA6BvC,QACA,QAA7BwC,EAAAL,EAAsBvC,eAAO,IAAA4C,GAA7BA,EAA+BxC,OAChC,EAEMyC,EAAW,eAAAxG,GAAAyG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYC,EAAAA,EAAIC,YAAW,OAAxCN,EAAeE,EAAAK,KAA2BC,KAChDjC,EAAayB,GACb3B,GAAW,GAAO,wBAAA6B,EAAAO,OAAA,GAAAV,EAAA,KAClB,kBAJgB,OAAA5G,EAAAuH,MAAA,KAAAC,UAAA,KAMXC,EAAiB,eAAAC,GAAAjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAgB,EAAOC,EAAYC,GAAU,IAAAC,EAAA,OAAApB,EAAAA,EAAAA,KAAAI,MAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAf,KAAA,EAAAe,EAAAd,KAAA,EAE/CC,EAAAA,EAAIc,YAAYrD,IAAkBiD,EAAIC,GAAO,KAAD,EAC5CC,EAAY3C,EAAU5E,KAAI,SAAA0D,GAC/B,OAAIA,EAAEgE,MAAQL,GAAIM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYjE,GAAC,IAAE4D,MAAOA,IAC5B5D,CACb,IACAmB,EAAa0C,GAAWC,EAAAd,KAAA,gBAAAc,EAAAf,KAAA,EAAAe,EAAAI,GAAAJ,EAAA,SAExB,IACClD,EAASuD,KAAKC,MAAMN,EAAAI,GAAMG,QAAQC,UAAUC,QAC7C,CAAE,MAAAC,GACD5D,EAAS,qCACT6D,QAAQC,IAAGZ,EAAAI,GACZ,CAAC,yBAAAJ,EAAAT,OAAA,GAAAK,EAAA,kBAEF,gBAhBsBiB,EAAAC,GAAA,OAAAnB,EAAAH,MAAA,KAAAC,UAAA,MAkBvBsB,EAAAA,EAAAA,YAAU,WACTtC,GACD,GAAG,IA6CH,OACC9F,EAAAA,EAAAA,MAAA,OAAKL,UAAU,iBAAgBC,SAAA,EAC9BI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,MAAMc,MAAO,CAAE4H,WAAY,OAAQzI,SAAA,CAAC,eAElDI,EAAAA,EAAAA,MAAA,UAAQmD,IAAKoC,EAAoB3F,SAAA,EAChCF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAeO,QAASyF,EAAY/F,SAAC,WAGvDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YAAY,4CAEhBF,EAAAA,EAAAA,KAAA,SAAO,KACPM,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CACe,OAAbyF,QAAa,IAAbA,OAAa,EAAbA,EAAeP,MAAO,KACT,OAAbO,QAAa,IAAbA,OAAa,EAAbA,EAAeP,SAAUwD,EAAAA,EAAgBC,UACzB,OAAblD,QAAa,IAAbA,OAAa,EAAbA,EAAkCmD,mBACtB,OAAbnD,QAAa,IAAbA,OAAa,EAAbA,EAAe/E,MAAO,IAAI,IAC3B,KACY,OAAb+E,QAAa,IAAbA,OAAa,EAAbA,EAAeP,SAAUwD,EAAAA,EAAgBC,UACzB,OAAblD,QAAa,IAAbA,OAAa,EAAbA,EAAkC/E,MACtB,OAAb+E,QAAa,IAAbA,OAAa,EAAbA,EAAeoD,aAEnB/I,EAAAA,EAAAA,KAAA,QACC4D,SAAQ,eAAAoF,GAAA3C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA0C,EAAMpF,GAAC,IAAAqF,EAAAC,EAAA,OAAA7C,EAAAA,EAAAA,KAAAI,MAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,OACG,GAAnBhD,EAAEE,kBACe,OAAb4B,QAAa,IAAbA,OAAa,EAAbA,EAAeP,SAAUwD,EAAAA,EAAgBC,UAAS,CAAAO,EAAAvC,KAAA,QAEV,OADhB,QAA3BsC,EAAAtD,EAAoBtC,eAAO,IAAA4F,GAA3BA,EAA6BxF,QAC7BmC,EAAsBvC,QAASC,YAAY4F,EAAAC,OAAA,wBAAAD,EAAAxC,KAAA,EAAAwC,EAAAvC,KAAA,EAIrCC,EAAAA,EAAIwC,kBAAkB/E,IAAkBoB,EAAekC,KAAM,KAAD,EAClEpD,EAAS,eACTK,GAAW,GACXsB,IAAcgD,EAAAvC,KAAA,iBAAAuC,EAAAxC,KAAA,GAAAwC,EAAArB,GAAAqB,EAAA,SAEd,IACC3E,EAASuD,KAAKC,MAAMmB,EAAArB,GAAMG,QAAQC,UAAUC,QAC7C,CAAE,MAAAmB,GACD9E,EAAS,qCACT6D,QAAQC,IAAGa,EAAArB,GACZ,CAAC,QAEyB,QAA3BmB,EAAArD,EAAoBtC,eAAO,IAAA2F,GAA3BA,EAA6BvF,QAC7BiC,OAAiB4D,GAAW,yBAAAJ,EAAAlC,OAAA,GAAA+B,EAAA,mBAC5B,gBAAAQ,GAAA,OAAAT,EAAA7B,MAAA,KAAAC,UAAA,EAtBO,GAsBNlH,UAEFF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAekE,KAAK,SAAQjE,SAAC,cAKnC,OAAbyF,QAAa,IAAbA,OAAa,EAAbA,EAAeP,SAAUwD,EAAAA,EAAgBC,YACzCvI,EAAAA,EAAAA,MAAA,UAAQmD,IAAKqC,EAAsB5F,SAAA,EAClCF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAeO,QAASyF,EAAY/F,SAAC,WAGvDF,EAAAA,EAAAA,KAAA,MAAAE,SACGwJ,OAAOC,OAAOrF,GAAsCsF,SACpDjE,EAAiCmD,oBAEhC,6BACA,oCAEJ9I,EAAAA,EAAAA,KAAC6J,EAA+B,CAC/BzE,MAAOO,EACPmE,UAAW,WAAO,IAADC,EACa,QAA7BA,EAAAjE,EAAsBvC,eAAO,IAAAwG,GAA7BA,EAA+BpG,QAC/BiC,OAAiB4D,GACjB1E,GAAW,GACXsB,GACD,WAKJ9F,EAAAA,EAAAA,MAAA,OAAKL,UAAU,OAAMC,SAAA,CAClB2E,GAOD7E,EAAAA,EAAAA,KAAAgK,EAAAA,SAAA,CAAA9J,SAAE,2BANF+E,IACCjF,EAAAA,EAAAA,KAAA,WAASC,UAAU,aAAYC,SAC7B+E,EAAW9E,KAAI,SAACiF,EAAO/E,GAAC,OA1HX,SAAC+E,EAAc/E,GAClC,OAAQ+E,EAAMA,OACb,KAAKwD,EAAAA,EAAgBqB,SACpB,OACCjK,EAAAA,EAAAA,KAACkK,EAAAA,EAAgB,CAChBC,SAAO,EACPC,cAAe,SAAA3C,GAAK,OAAIJ,EAAkBjC,EAAMyC,IAAMJ,EAAM,EAE5DrC,MAAOA,GADF/E,GAIR,KAAKuI,EAAAA,EAAgByB,MACpB,OACCrK,EAAAA,EAAAA,KAACsK,EAAAA,EAAa,CACbH,SAAO,EACPC,cAAe,SAAA3C,GAAK,OAAIJ,EAAkBjC,EAAMyC,IAAMJ,EAAM,EAE5DrC,MAAOA,GADF/E,GAIR,KAAKuI,EAAAA,EAAgB2B,YAAc3B,EAAAA,EAAgB4B,aAClD,OACCxK,EAAAA,EAAAA,KAACyK,EAAAA,EAAc,CACdN,SAAO,EACPC,cAAe,SAAA3C,GAAK,OAAIJ,EAAkBjC,EAAMyC,IAAMJ,EAAM,EAE5DrC,MAAOA,GADF/E,GAIR,KAAKuI,EAAAA,EAAgB8B,YAAc9B,EAAAA,EAAgB+B,aAClD,OACC3K,EAAAA,EAAAA,KAAC4K,EAAAA,EAAc,CACdT,SAAO,EACPC,cAAe,SAAA3C,GAAK,OAAIJ,EAAkBjC,EAAMyC,IAAMJ,EAAM,EAE5DrC,MAAOA,GADF/E,GAIR,QACC,OAAOL,EAAAA,EAAAA,KAAAgK,EAAAA,SAAA,IAEV,CAiFoCa,CAAYzF,EAAO/E,EAAE,OAMtDL,EAAAA,EAAAA,KAAA,WAASC,UAAU,iBAAgBC,SACP,IAA1BoF,EAAewF,OACfxF,EAAenF,KAAI,SAACiF,EAAO/E,GAAC,OAC3BC,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,CACEkF,EAAMA,MAAM,KAAG,IACdA,EAAyB0D,mBACvB1D,EAAyB0D,mBAAqB,MAC/C,KACF1D,EAAMxE,MAAM,MAAI,IAAI6E,KAAKL,EAAMI,WAAWuF,mBAAmB,SAAS,iBACjE,IACL,IAAItF,KAAKL,EAAMI,WAAWwF,eAAe,QAAS,CAClDC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IACL,IAAI,KACL/F,EAAMC,WAAYrF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAC,YAAiB,YAC7DF,EAAAA,EAAAA,KAAA,MAAAE,SACEkF,EAAMA,QAAUwD,EAAAA,EAAgBC,UAC7BzD,EAAyBgG,aAAa,GAAGjL,KAAI,SAACkL,EAAGhL,GAAC,OACnDC,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,CACEmL,EAAE3J,KAAK,MAAI2J,EAAEC,OADNjL,EAEJ,IAEL+E,EAAMmG,MAAMpL,KAAI,SAACmL,EAAMjL,GAAC,OAAKC,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,CAAaoL,EAAK5J,KAAK,MAAdrB,EAAoB,OAE9DL,EAAAA,EAAAA,KAAA,UACCC,UAAU,eACVO,SAAO6F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAiF,IAAA,OAAAlF,EAAAA,EAAAA,KAAAI,MAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,WACJzB,EAAOC,UAAU,CAADoG,EAAA5E,KAAA,aACdzB,EAAOsG,SAAqB,IAAIjG,MAAOC,WAAS,CAAA+F,EAAA5E,KAAA,QACR,OAA5CpC,EAAS,mCAAmCgH,EAAApC,OAAA,iBAG7CzD,EAAiBR,GACjBW,IAAa0F,EAAA5E,KAAA,uBAAA4E,EAAA7E,KAAA,EAAA6E,EAAA5E,KAAA,GAGNC,EAAAA,EAAIwC,kBAAkB/E,IAAkBa,EAAOyC,KAAM,KAAD,GAC1DpD,EAAS,eACTK,GAAW,GACXsB,IAAcqF,EAAA5E,KAAA,iBAAA4E,EAAA7E,KAAA,GAAA6E,EAAA1D,GAAA0D,EAAA,SAEd,IACChH,EAASuD,KAAKC,MAAMwD,EAAA1D,GAAMG,QAAQC,UAAUC,QAC7C,CAAE,MAAAuD,GACDlH,EAAS,qCACT6D,QAAQC,IAAGkD,EAAA1D,GACZ,CAAC,yBAAA0D,EAAAvE,OAAA,GAAAsE,EAAA,mBAGFtL,SAEDkF,EAAMC,UAAY,YAAc,cAjDzBhF,EAmDJ,KAGPL,EAAAA,EAAAA,KAAAgK,EAAAA,SAAA,CAAA9J,SAAE,gDAMR,EAIM2J,EAAkC,SAAH+B,GAM9B,IALNxG,EAAKwG,EAALxG,MACA0E,EAAS8B,EAAT9B,UAKMvF,GAAiBC,EAAAA,EAAAA,MACjBC,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAAcC,gBAC1CjC,GAAwCtB,EAAAA,EAAAA,UAAS+D,EAAMgG,aAAa,IAAGxI,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAAhEyI,EAAYxI,EAAA,GAAEiJ,EAAejJ,EAAA,GAE9BkJ,EAAY,SAACC,GAClB,IAAMC,EAAYD,EAAKE,MAAM,KACzBC,EAAgC,GAAvBC,OAAOH,EAAU,IAAW,IAGzC,OAFIA,EAAUlB,QAAU,IAAGoB,GAAiC,IAAvBC,OAAOH,EAAU,KAClDA,EAAUlB,QAAU,IAAGoB,GAAUC,OAAOH,EAAU,KAC/CE,CACR,EAEA,OACC5L,EAAAA,EAAAA,MAAA,QACCsD,SAAQ,eAAAwI,GAAA/F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA8F,EAAMxI,GAAC,IAAAyI,EAAA,OAAAhG,EAAAA,EAAAA,KAAAI,MAAA,SAAA6F,GAAA,cAAAA,EAAA3F,KAAA2F,EAAA1F,MAAA,OAeb,OAdHhD,EAAEE,iBACEuI,EAAiC,GACrClB,EAAaoB,SAAQ,SAAAnB,QACH7B,IAAb6B,EAAEoB,OAINH,EAAgBI,KACdhD,OAAOC,OAAOrF,GAAsCsF,SACnDxE,EAAyB0D,oBAExB,CAAEpH,KAAM2J,EAAE3J,KAAM4J,KAAMD,EAAEC,KAAMqB,SAAUR,OAAOd,EAAEoB,SACjD,CAAE/K,KAAM2J,EAAE3J,KAAM4J,KAAMD,EAAEC,KAAMS,KAAMD,EAAUT,EAAEoB,UARnDhI,EAAS,qBAUX,IAAG8H,EAAA3F,KAAA,EAAA2F,EAAA1F,KAAA,EAEIC,EAAAA,EAAI8F,yBAAyBrI,IAAkBa,EAAMyC,IAAMyE,GAAiB,KAAD,SAAAC,EAAA1F,KAAA,EAC3EC,EAAAA,EAAIwC,kBAAkB/E,IAAkBa,EAAOyC,KAAM,KAAD,EAC1DpD,EAAS,eACTqF,IAAYyC,EAAA1F,KAAA,iBAAA0F,EAAA3F,KAAA,GAAA2F,EAAAxE,GAAAwE,EAAA,SAEZ,IACC9H,EAASuD,KAAKC,MAAMsE,EAAAxE,GAAMG,QAAQC,UAAUC,QAC7C,CAAE,MAAAyE,GACDpI,EAAS,qCACT6D,QAAQC,IAAGgE,EAAAxE,GACZ,CAAC,yBAAAwE,EAAArF,OAAA,GAAAmF,EAAA,mBAEF,gBAAAS,GAAA,OAAAV,EAAAjF,MAAA,KAAAC,UAAA,EA7BO,GA6BNlH,SAAA,CAEDkL,EAAajL,KAAI,SAACkL,EAAGhL,GAAC,OACtBC,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,SAAAE,SAAQmL,EAAE3J,QACV1B,EAAAA,EAAAA,KAAA,SACC0B,KAAK,UACLyC,KAAK,OACLH,SAAU,SAAAH,GAAC,OACVgI,EACCT,EAAajL,KAAI,SAAA4M,GAAE,OAClBA,EAAGrL,OAAS2J,EAAE3J,MAAIoG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQiF,GAAE,IAAEN,OAAQ5I,EAAEI,OAAOC,QAAU6I,CAAE,IAE5D,EAEF7I,MAAOkH,EAAa/K,GAAGoM,OACvBxM,UAAU,kBAEN,KAEPD,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAekE,KAAK,SAAQjE,SAAC,aAKlD,E,UCrUA,EAnBgB,SAAHN,GAMN,IALN0L,EAAI1L,EAAJ0L,KACAnK,EAAQvB,EAARuB,SAKA,OACCb,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,MAAAE,SAAKoL,EAAK5J,QACV1B,EAAAA,EAAAA,KAAA,MAAAE,UACCF,EAAAA,EAAAA,KAAA,UAAQQ,QAAS,kBAAMW,EAASmK,EAAK,EAAErL,UAAU,eAAcC,SAAC,eAMpE,EC2FA,EA1Gc,SAAHN,GAQJ,IAPN2L,EAAK3L,EAAL2L,MACAyB,EAASpN,EAAToN,UACAC,EAAYrN,EAAZqN,aAMMC,GAAgB7J,EAAAA,EAAAA,QAAiC,MACjD8J,GAAsB9J,EAAAA,EAAAA,QAAiC,MAC7DjC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CgM,EAAW9L,EAAA,GAAE+L,EAAc/L,EAAA,GAClCa,GAAwCd,EAAAA,EAAAA,YAAgBe,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAAjDmL,EAAYlL,EAAA,GAAEmL,EAAenL,EAAA,GACpCG,GAAgClB,EAAAA,EAAAA,UAAS,IAAGmB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAArCM,EAAQL,EAAA,GAAEM,EAAWN,EAAA,GAKtByD,EAAc,WAAO,IAADuH,EAAAC,EACJ,QAArBD,EAAAN,EAAc3J,eAAO,IAAAiK,GAArBA,EAAuB7J,QACI,QAA3B8J,EAAAN,EAAoB5J,eAAO,IAAAkK,GAA3BA,EAA6B9J,OAC9B,EAaM+J,EAAoB,SAACJ,GAAwB,IAADK,EACjDJ,EAAgBD,GACW,QAA3BK,EAAAR,EAAoB5J,eAAO,IAAAoK,GAA3BA,EAA6BnK,WAC9B,EAEA,OACClD,EAAAA,EAAAA,MAAA,OAAKL,UAAU,iBAAgBC,SAAA,EAC9BI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,MAAKC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,UAAQQ,QA3BQ,WAAO,IAADoN,EACH,QAArBA,EAAAV,EAAc3J,eAAO,IAAAqK,GAArBA,EAAuBpK,WACxB,EAyBgCvD,UAAU,eAAcC,SAAC,cAGtDI,EAAAA,EAAAA,MAAA,UAAQmD,IAAKyJ,EAAchN,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAeO,QAASyF,EAAY/F,SAAC,WAGvDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBACJI,EAAAA,EAAAA,MAAA,QAAMsD,SA3BY,SAACC,GAAY,IAADgK,EAEjC,GADAhK,EAAEE,iBACkB,KAAhBqJ,EAGH,OAFAtK,EAAY,oBACZnB,YAAW,kBAAMmB,EAAY,GAAG,GAAE,KAGnCkK,EAAU,CAAEtL,KAAM0L,IACG,QAArBS,EAAAX,EAAc3J,eAAO,IAAAsK,GAArBA,EAAuBlK,OACxB,EAkBkCzD,SAAA,EAC7BI,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,UACPF,EAAAA,EAAAA,KAAA,SACC0B,KAAK,OACLsC,SAAU,SAACH,GAAC,OAAKwJ,EAAexJ,EAAEI,OAAOC,MAAM,EAC/CA,MAAOkJ,EACPnN,UAAU,oBAGZD,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAekE,KAAK,SAAQjE,SAAC,WAI/C2C,MAEFvC,EAAAA,EAAAA,MAAA,UAAQmD,IAAK0J,EAAoBjN,SAAA,EAChCF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAeO,QAASyF,EAAY/F,SAAC,WAGvDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YAAY,mCAEhBF,EAAAA,EAAAA,KAAA,SAAM,KAACM,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAgB,OAAZoN,QAAY,IAAZA,OAAY,EAAZA,EAAc5L,KAAK,SAC9B1B,EAAAA,EAAAA,KAAA,QACC4D,SAAU,SAACC,GAAO,IAADiK,EAChBjK,EAAEE,iBACFkJ,EAAaK,GACc,QAA3BQ,EAAAX,EAAoB5J,eAAO,IAAAuK,GAA3BA,EAA6BnK,QAC7B4J,OAAgB/D,EACjB,EAAEtJ,UAEFF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAekE,KAAK,SAAQjE,SAAC,iBAMlDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACpBI,EAAAA,EAAAA,MAAA,SAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,SAAAE,UACCI,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBAGNF,EAAAA,EAAAA,KAAA,SAAAE,SACEqL,EAAMpL,KAAI,SAACmL,EAAMjL,GAAC,OAClBL,EAAAA,EAAAA,KAAC+N,EAAO,CAASzC,KAAMA,EAAMnK,SAAUuM,GAAzBrN,EAA8C,aAOnE,E,iGC3FY2N,EAAU,SAAVA,GAAU,OAAVA,EAAU,kBAAVA,EAAU,kBAAVA,CAAU,MCjBjBC,EAAe,SAAfA,GAAe,OAAfA,EAAe,mBAAfA,EAAe,cAAfA,CAAe,EAAfA,GAAe,IAIpB,KCoBAC,EAAAA,EAAAA,IAAiBC,EAAAA,IACjBD,EAAAA,EAAAA,IAAiBE,EAAAA,IACjBF,EAAAA,EAAAA,IAAiBG,EAAAA,IAEjBC,EAAAA,EAAAA,IAAeC,EAAAA,KACfD,EAAAA,EAAAA,IAAeE,EAAAA,IAEf,IAAM9I,EAAU,SAAC+I,EAAoB1C,GACpC,IAAI2C,EAAYD,EAAWxC,MAAM,KAC7B0C,EAAa,IAAIlJ,KACpBiJ,EAAU,GAAK,IAAMA,EAAU,GAAK,IAAMA,EAAU,IAarD,OADAC,EAAWC,QAAQD,EAAWjJ,UAA+B,IAV7D,SAAoBqG,GACnB,IAAIC,EAAYD,EAAKE,MAAM,KAC3BD,EAAU,GAAKA,EAAU,GAAGC,MAAM,KAAK,GACvCD,EAAU,GAAKA,EAAU,GAAGC,MAAM,KAAK,GACvC,IAAI4C,EACkD,IAA7B,GAAvB1C,OAAOH,EAAU,IAAWG,OAAOH,EAAU,KAC9CG,OAAOH,EAAU,IAElB,MADqB,OAAjBA,EAAU,IAAgC,OAAjBA,EAAU,KAAa6C,GAAW,OACxDA,CACR,CAC0CC,CAAW/C,IAC9C4C,EAAWjJ,SACnB,EAcMqJ,EAA6B,SAAC9H,GAanC,OAZeA,EAAK9G,KAAI,SAAC6O,GACxB,MAAO,CACN5J,MAAO4J,EAAI,GACXC,UAAWD,EAAI,GACfpO,MAAOoO,EAAI,GACXjG,SAAUiG,EAAI,GACdxJ,UAAWE,EAAQsJ,EAAI,GAAIA,EAAI,IAC/BtD,QAAShG,EAAQsJ,EAAI,GAAIA,EAAI,IAC7BzD,MAAOyD,EAAIE,MAAM,EAAG,GACpBC,UAAWH,EAAI,GAEjB,GAED,EACMI,EAAiC,SAACnI,GAWvC,OAVeA,EAAK9G,KAAI,SAAC6O,GACxB,OAAAlH,EAAAA,EAAAA,GAAA,CACC1C,MAAOwD,EAAAA,EAAgBC,UACvBC,mBAAoBkG,EAAI,GACxBpO,MAAOoO,EAAI,GACXxJ,UAAWE,EAAQsJ,EAAI,GAAIA,EAAI,IAC/BtD,QAAShG,EAAQsJ,EAAI,GAAIA,EAAI,KAlCI,SAACA,GAGpC,IAFA,IAAIK,EAAW,GACXhE,EAAW,GACNhL,EAAI,EAAGA,EAAI2O,EAAIM,QAAQ,MAAOjP,GAAK,EAAG,CAC9C,IAAMqB,EAAOsN,EAAI3O,GACXiL,EAAO0D,EAAI3O,EAAI,GACrBgP,EAAE3C,KAAKpB,GACPD,EAAEqB,KAAK,CAAEhL,KAAAA,EAAM4J,KAAAA,GAChB,CACA,MAAO,CAAEC,MAAO8D,EAAGjE,aAAc,CAACC,GACnC,CAyBMkE,CAA4BP,EAAIE,MAAM,IAE3C,GAED,EAucA,EArcuB,SAAHtP,GAAsC,IAAhC2L,EAAK3L,EAAL2L,MACnBiE,GAASnM,EAAAA,EAAAA,QAAwB,MACjCoM,GAAepM,EAAAA,EAAAA,QAAwB,MACvCoB,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAAcC,gBACpCL,GAAiBC,EAAAA,EAAAA,MAEvBpD,GAAkCC,EAAAA,EAAAA,UAAkB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhD2D,EAASzD,EAAA,GAAE0D,EAAY1D,EAAA,GAC9Ba,GAAoCd,EAAAA,EAAAA,UAAkB,IAAGe,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAAlDuN,EAAUtN,EAAA,GAAEuN,EAAavN,EAAA,GAChCG,GAA8BlB,EAAAA,EAAAA,WAAS,GAAKmB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAArCsC,EAAOrC,EAAA,GAAEsC,EAAUtC,EAAA,GAEpBoN,GAAyB1K,EAAAA,EAAAA,UAAQ,WACtC,IAAI2K,EAAiB,GAIrB,OAHA9K,EAAUyH,SAAQ,SAAC3I,EAAGxD,IACjBwD,EAAE0B,aAAe1B,EAAEwB,YAAWwK,EAAQnD,KAAKrM,EAChD,IACOwP,CACR,GAAG,CAAC9K,IACE+K,GAA6B5K,EAAAA,EAAAA,UAAQ,WAC1C,IAAI2K,EAAiB,GAIrB,OAHAH,EAAWlD,SAAQ,SAAC3I,EAAGxD,IAClBwD,EAAE0B,aAAe1B,EAAEwB,YAAWwK,EAAQnD,KAAKrM,EAChD,IACOwP,CACR,GAAG,CAACH,KAEJhH,EAAAA,EAAAA,YAAU,WAAO,IAADqH,EACTC,EAAY,OAANR,QAAM,IAANA,GAAe,QAATO,EAANP,EAAQjM,eAAO,IAAAwM,OAAT,EAANA,EAAiBE,YAC1B,OAAHD,QAAG,IAAHA,GAAAA,EAAKE,eAAe,CACnBC,MAAK,SAACC,EAAKC,GACV,IAAIC,EAAsB,CAAC,EAK3B,OAJIV,EAAuBhG,SAASwG,KACnCE,EAAeC,UAAW,GAGpBD,CACR,GAEF,GAAG,CAACV,IAEJ,IAAMY,EAAiB,SAACC,GACvB,IAAMC,EAAUD,EAAOtQ,KAAI,SAAC0D,GAC3B,OAAAiE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACIjE,GAAC,IACJ8M,KAAM,IAAIlL,KAAK5B,EAAE2B,WAAWuF,mBAAmB,SAC/CvF,UAAW,IAAIC,KAAK5B,EAAE2B,WAAWwF,eAAe,QAAS,CACxDC,KAAM,UACNC,OAAQ,UACR0F,OAAQ,UACRzF,QAAQ,IAETO,QAAS,IAAIjG,KAAK5B,EAAE6H,SAASV,eAAe,QAAS,CACpDC,KAAM,UACNC,OAAQ,UACR0F,OAAQ,UACRzF,QAAQ,KAGX,IAOA,OANAuF,EAAQlE,SAAQ,SAAC3I,GAChBA,EAAE0H,MAAMiB,SAAQ,SAAClB,EAAWjL,GAE3BwD,EADoB,OAASxD,GACpBiL,EAAK5J,IACf,GACD,IACOgP,CACR,EAEMG,EAAqB,SAACJ,GAC3B,IAAMC,EAAiBD,EAAOtQ,KAAI,SAAC0D,GAClC,OAAAiE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACIjE,GAAC,IACJ8M,KAAM,IAAIlL,KAAK5B,EAAE2B,WAAWuF,mBAAmB,SAC/CvF,UAAW,IAAIC,KAAK5B,EAAE2B,WAAWwF,eAAe,QAAS,CACxDC,KAAM,UACNC,OAAQ,UACR0F,OAAQ,UACRzF,QAAQ,IAETO,QAAS,IAAIjG,KAAK5B,EAAE6H,SAASV,eAAe,QAAS,CACpDC,KAAM,UACNC,OAAQ,UACR0F,OAAQ,UACRzF,QAAQ,KAGX,IASA,OARAuF,EAAQlE,SAAQ,SAAC3I,GAChBA,EAAEuH,aAAa,GAAGoB,SAAQ,SAACsE,EAAkBzQ,GAC5C,IAAI0Q,EAAM,cAAgB1Q,EAC1BwD,EAAEkN,GAAOD,EAAYpP,KAErBmC,EADAkN,EAAM,OAAS1Q,GACNyQ,EAAYxF,IACtB,GACD,IACOoF,CACR,EAEMtK,EAAW,eAAAkB,GAAAjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAuK,EAAAtB,EAAA,OAAApJ,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYC,EAAAA,EAAIC,YAAW,OAAxCN,EAAeE,EAAAK,KAA2BC,KAC1C+J,EAAcvK,EAAOtB,QAC1B,SAACtB,GAAC,OAAKA,EAAEuB,QAAUwD,EAAAA,EAAgBC,SAAS,IAEvC6G,EAAajJ,EAAOtB,QACzB,SAACtB,GAAC,OAAKA,EAAEuB,QAAUwD,EAAAA,EAAgBC,SAAS,IAE7C7D,EAAawL,EAAeQ,IAC5BrB,EAAckB,EAAmBnB,IACjC5K,GAAW,GAAO,wBAAA6B,EAAAO,OAAA,GAAAV,EAAA,KAClB,kBAXgB,OAAAc,EAAAH,MAAA,KAAAC,UAAA,KAaX6J,EAAa,eAAAjI,GAAA3C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAgB,IAAA,IAAA2J,EAAAC,EAAAnB,EAAAoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAArR,EAAA+P,EAAAuB,EAAAC,EAAAC,EAAAC,EAAA7K,EAAA,OAAAX,EAAAA,EAAAA,KAAAI,MAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,OAcnB,GAbImJ,EAAY,OAANR,QAAM,IAANA,GAAe,QAAT0B,EAAN1B,EAAQjM,eAAO,IAAA2N,OAAT,EAANA,EAAiBjB,YACvBmB,EAAwB,OAAZ3B,QAAY,IAAZA,GAAqB,QAAT0B,EAAZ1B,EAAclM,eAAO,IAAA4N,OAAT,EAAZA,EAAuBlB,YACnCoB,EAAa,OAAHrB,QAAG,IAAHA,OAAG,EAAHA,EAAK+B,UACfT,EAAoB,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWW,UACtBR,EAAyBF,EAAQlM,QACtC,SAACiL,EAAY/P,GAAC,OAAMuP,EAAuBhG,SAASvJ,EAAE,IAEjDmR,EAA6BF,EAASnM,QAC3C,SAACiL,EAAY/P,GAAC,OAAMyP,EAA2BlG,SAASvJ,EAAE,IAErDoR,EAAYF,EAAwBpM,QAAO,SAAC6J,GAAG,OAAgB,OAAXA,EAAI,EAAW,IACnE0C,EAAgBF,EAA4BrM,QACjD,SAAC6J,GAAG,OAAgB,OAAXA,EAAI,EAAW,IAEC,KAAb,OAATyC,QAAS,IAATA,OAAS,EAATA,EAAW3G,SAA0C,KAAb,OAAb4G,QAAa,IAAbA,OAAa,EAAbA,EAAe5G,QAAY,CAAAnD,EAAAd,KAAA,SAEzD,IACCC,EAAAA,EAAIkL,aAAa,GAAIzN,KACrBE,EAAS,iCACV,CAAE,MAAOwN,GACR,IACCxN,EAASuD,KAAKC,MAAMgK,EAAM/J,QAAQC,UAAUC,QAC7C,CAAE,MAAAC,GACD5D,EAAS,qCACT6D,QAAQC,IAAI0J,EACb,CACD,CAAC,OAAAtK,EAAA0B,OAAA,kBAGOhJ,EAAI,EAAE,KAAD,QAAEA,EAAIoR,EAAW3G,QAAM,CAAAnD,EAAAd,KAAA,SAO3B,GANHuJ,EAAaqB,EAAWpR,GAC1BsR,EAAOvB,EAAItF,OACf6G,GAAiC,IAA1BvB,EAAId,QAAQ,KAAM,GAAYc,EAAId,QAAQ,KAAM,GAAKqC,KAC5DA,GACyB,IAAxBvB,EAAId,QAAQ,GAAI,IAAac,EAAId,QAAQ,GAAI,GAAKqC,EAC/CvB,EAAId,QAAQ,GAAI,GAChBqC,IACQ,GAAC,CAAAhK,EAAAd,KAAA,SAC6B,OAAzCpC,EAAS,gCAAgCkD,EAAA0B,OAAA,kBATJhJ,IAAGsH,EAAAd,KAAA,iBAajCxG,EAAI,EAAE,KAAD,QAAEA,EAAIqR,EAAe5G,QAAM,CAAAnD,EAAAd,KAAA,SAO/B,GANHuJ,EAAasB,EAAerR,GAC9BsR,EAAOvB,EAAItF,OACf6G,GAAiC,IAA1BvB,EAAId,QAAQ,KAAM,GAAYc,EAAId,QAAQ,KAAM,GAAKqC,KAC5DA,GACyB,IAAxBvB,EAAId,QAAQ,GAAI,IAAac,EAAId,QAAQ,GAAI,GAAKqC,EAC/CvB,EAAId,QAAQ,GAAI,GAChBqC,IACQ,IAAMA,EAAO,GAAK,IAAM,GAAC,CAAAhK,EAAAd,KAAA,SACK,OAAzCpC,EAAS,gCAAgCkD,EAAA0B,OAAA,kBATAhJ,IAAGsH,EAAAd,KAAA,iBAaxCI,EAAI,GAAAiL,QAAAC,EAAAA,EAAAA,GACNpD,EAA2B0C,KAAUU,EAAAA,EAAAA,GACrC/C,EAA+BsC,KAGnC,IACC5K,EAAAA,EAAIkL,aAAa/K,EAAM1C,KACvBE,EAAS,iCACV,CAAE,MAAOwN,GACR,IACCxN,EAASuD,KAAKC,MAAMgK,EAAM/J,QAAQC,UAAUC,QAC7C,CAAE,MAAAmB,GACD9E,EAAS,qCACT6D,QAAQC,IAAI0J,EACb,CACD,CAAC,yBAAAtK,EAAAT,OAAA,GAAAK,EAAA,KACD,kBAxEkB,OAAAyB,EAAA7B,MAAA,KAAAC,UAAA,KA6FnB,OAnBAsB,EAAAA,EAAAA,YAAU,WACT,IAAM0J,EAAqB,SAACnL,GAC3B,IAAMoL,EAAmBrK,KAAKC,MAAMhB,GACpCjC,GAAa,SAAC4B,GAAI,OACjBA,EAAKzG,KAAI,SAACiF,GAAK,OACdiN,EAAiBC,UAAYlN,EAAMyC,KAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC9B1C,GAAK,IAAEC,UAAWgN,EAAiBhN,YACxCD,CAAK,GACR,GAEH,EAIA,OAHAmN,EAAAA,EAAOC,GAAG,kBAAmBJ,GAC7BhM,IAEO,WACNmM,EAAAA,EAAOE,IAAI,kBAAmBL,EAC/B,CACD,GAAG,KAGF9R,EAAAA,EAAAA,MAAA,OAAKL,UAAU,iBAAgBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAMc,MAAO,CAAE4H,WAAY,OAAQzI,SAAC,mBAGlD2E,GACA7E,EAAAA,EAAAA,KAAAgK,EAAAA,SAAA,CAAA9J,SAAE,+BAEFI,EAAAA,EAAAA,MAAA0J,EAAAA,SAAA,CAAA9J,SAAA,EACCF,EAAAA,EAAAA,KAAA,UACCC,UAAU,eACVc,MAAO,CAAE2R,UAAW,OACpBlS,QAASyQ,EAAc/Q,SACvB,UAIDF,EAAAA,EAAAA,KAAA,OACCC,UAAU,iBACVc,MAAO,CAAE4R,UAAW,SAAUC,UAAW,QAAS1S,UAElDF,EAAAA,EAAAA,KAAC6S,EAAAA,GAAQ,CACRC,WAAW,EACXrP,IAAK+L,EACLvI,KAAMlC,EACNhE,MAAO,CAAE2R,UAAW,MAAOK,UAAW,cACtCC,YAAY,EACZC,QAAS,CACR,CACChM,KAAM,QACN9C,KAAM,WACN+O,OAAQxJ,OAAOC,OAAOf,EAAAA,GAAiBzD,QACtC,SAACgO,GAAC,OAAKA,IAAMvK,EAAAA,EAAgBC,SAAS,KAGxC,CACC5B,KAAM,YACN9C,KAAM,WACN+O,OAAQxJ,OAAOC,OAAOqE,IAEvB,CAAE/G,KAAM,QAAS9C,KAAM,QACvB,CAAE8C,KAAM,WAAY9C,KAAM,QAC1B,CAAE8C,KAAM,OAAQ9C,KAAM,OAAQiP,eAAe,GAC7C,CACCnM,KAAM,YACN9C,KAAM,OACNkP,WAAY,YACZD,eAAe,GAEhB,CACCnM,KAAM,UACN9C,KAAM,OACNkP,WAAY,YACZD,eAAe,GAEhB,CACCnM,KAAM,QACN9C,KAAM,WACN+O,OAAQ3H,EAAMpL,KAAI,SAACmL,GAAI,OAAKA,EAAK5J,IAAI,KAEtC,CACCuF,KAAM,QACN9C,KAAM,WACN+O,OAAQ3H,EAAMpL,KAAI,SAACmL,GAAI,OAAKA,EAAK5J,IAAI,KAEtC,CAAEuF,KAAM,YAAa9C,KAAM,SAE5BmP,WAAY,CACX,QACA,aACA,OACA,WACA,OACA,aACA,WACA,SACA,SACA,4BAEDC,aAAc,EACdC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACzDC,WAAW,qCAGbnT,EAAAA,EAAAA,MAAA,OACCL,UAAU,iBACVc,MAAO,CAAE4R,UAAW,SAAUC,UAAW,QAAS1S,SAAA,EAElDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,4BACJF,EAAAA,EAAAA,KAAC6S,EAAAA,GAAQ,CACRpP,IAAKgM,EACLxI,KAAMyI,EACN3O,MAAO,CAAE2R,UAAW,MAAOK,UAAW,cACtCC,YAAY,EACZC,QAAS,CACR,CACChM,KAAM,qBACN9C,KAAM,WACN+O,OAAQxJ,OAAOC,OAAOtF,IAEvB,CACC4C,KAAM,QACN9C,KAAM,WACN+O,OAAQxJ,OAAOC,OAAOsE,IAEvB,CAAEhH,KAAM,OAAQ9C,KAAM,OAAQiP,eAAe,GAC7C,CACCnM,KAAM,YACN9C,KAAM,OACNkP,WAAY,YACZD,eAAe,GAEhB,CACCnM,KAAM,UACN9C,KAAM,OACNkP,WAAY,YACZD,eAAe,GAEhB,CACCnM,KAAM,eACN9C,KAAM,QAEP,CACC8C,KAAM,QACN9C,KAAM,WACN+O,OAAQ3H,EAAMpL,KAAI,SAACmL,GAAI,OAAKA,EAAK5J,IAAI,KAEtC,CACCuF,KAAM,eACN9C,KAAM,QAEP,CACC8C,KAAM,QACN9C,KAAM,WACN+O,OAAQ3H,EAAMpL,KAAI,SAACmL,GAAI,OAAKA,EAAK5J,IAAI,KAEtC,CACCuF,KAAM,eACN9C,KAAM,QAEP,CACC8C,KAAM,QACN9C,KAAM,WACN+O,OAAQ3H,EAAMpL,KAAI,SAACmL,GAAI,OAAKA,EAAK5J,IAAI,KAEtC,CACCuF,KAAM,eACN9C,KAAM,QAEP,CACC8C,KAAM,QACN9C,KAAM,WACN+O,OAAQ3H,EAAMpL,KAAI,SAACmL,GAAI,OAAKA,EAAK5J,IAAI,KAEtC,CACCuF,KAAM,eACN9C,KAAM,QAEP,CACC8C,KAAM,QACN9C,KAAM,WACN+O,OAAQ3H,EAAMpL,KAAI,SAACmL,GAAI,OAAKA,EAAK5J,IAAI,KAEtC,CACCuF,KAAM,eACN9C,KAAM,QAEP,CACC8C,KAAM,QACN9C,KAAM,WACN+O,OAAQ3H,EAAMpL,KAAI,SAACmL,GAAI,OAAKA,EAAK5J,IAAI,KAEtC,CACCuF,KAAM,eACN9C,KAAM,QAEP,CACC8C,KAAM,QACN9C,KAAM,WACN+O,OAAQ3H,EAAMpL,KAAI,SAACmL,GAAI,OAAKA,EAAK5J,IAAI,KAEtC,CACCuF,KAAM,eACN9C,KAAM,QAEP,CACC8C,KAAM,QACN9C,KAAM,WACN+O,OAAQ3H,EAAMpL,KAAI,SAACmL,GAAI,OAAKA,EAAK5J,IAAI,KAEtC,CACCuF,KAAM,eACN9C,KAAM,QAEP,CACC8C,KAAM,QACN9C,KAAM,WACN+O,OAAQ3H,EAAMpL,KAAI,SAACmL,GAAI,OAAKA,EAAK5J,IAAI,KAEtC,CACCuF,KAAM,eACN9C,KAAM,QAEP,CACC8C,KAAM,QACN9C,KAAM,WACN+O,OAAQ3H,EAAMpL,KAAI,SAACmL,GAAI,OAAKA,EAAK5J,IAAI,MAGvC4R,WAAY,CACX,QACA,QACA,OACA,aACA,WACA,gBACA,OACA,gBACA,OACA,gBACA,OACA,gBACA,OACA,gBACA,OACA,gBACA,OACA,gBACA,OACA,gBACA,OACA,gBACA,OACA,iBACA,QAEDC,aAAc,EACdC,UAAW,CACV,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5D,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAExDC,WAAW,0CAOlB,EC1cA,EAjEwC,SAAH7T,GAA2B,IAArB8T,EAAI9T,EAAJ8T,KAAMpB,EAAO1S,EAAP0S,QAChDlR,GAA0BC,EAAAA,EAAAA,YAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCgE,EAAK9D,EAAA,GAAEqS,EAAQrS,EAAA,GAChBiD,GAAiBC,EAAAA,EAAAA,MACvBrC,GAAwCd,EAAAA,EAAAA,WAAS,GAAMe,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAAhDyR,EAAYxR,EAAA,GAAEyR,EAAezR,EAAA,GASpC,OAPAsG,EAAAA,EAAAA,YAAU,WACT5B,EAAAA,EAAIgN,aAAavP,IAAkB+N,GAASyB,MAAK,SAAC9M,GACjDqB,QAAQC,IAAItB,EAAKA,MACjB0M,EAAS1M,EAAKA,KACf,GACD,GAAG,IAEE7B,GAGJ9E,EAAAA,EAAAA,MAAA0J,EAAAA,SAAA,CAAA9J,SAAA,CACE0T,IACA5T,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACxBI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,eAAcC,SAAA,EAC5BI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,oBAAmBC,SAAA,EACjCI,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACE8T,EAAAA,EAAAA,GAAgB5O,EAAMA,OAAO,IAAEA,EAAMxE,MAAM,IAAEwE,EAAM2D,SAAU,IAAI,qBAGnE/I,EAAAA,EAAAA,KAAA,OACCC,UAAU,iBACVO,QAAS,kBAAMqT,GAAgB,EAAM,EAAC3T,SACtC,aAKFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAC5BwT,EAAKvT,KAAI,SAACoI,EAAKlI,GAAC,OAChBC,EAAAA,EAAAA,MAAA,OAAaL,UAAU,MAAKC,SAAA,EAC3BI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,WAAUC,SAAA,CAAC,eACdF,EAAAA,EAAAA,KAAA,UAAAE,SAASqI,EAAI0L,eAEzB3T,EAAAA,EAAAA,MAAA,OAAKL,UAAU,WAAUC,SAAA,EACxBI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,qBAAoBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,oBACLF,EAAAA,EAAAA,KAAA,QAAAE,SAAO8H,KAAKkM,UAAU3L,EAAI4L,UAAW,KAAM,SAE5C7T,EAAAA,EAAAA,MAAA,OAAKL,UAAU,oBAAmBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,mBACLF,EAAAA,EAAAA,KAAA,QAAAE,SAAO8H,KAAKkM,UAAU3L,EAAI6L,aAAc,KAAM,aAXvC/T,EAcJ,YAMXC,EAAAA,EAAAA,MAAA,OAAKL,UAAU,WAAWO,QAAS,kBAAMqT,GAAgB,EAAK,EAAC3T,SAAA,CAAC,gBACjD,KACdI,EAAAA,EAAAA,MAAA,UAAAJ,SAAA,EACE8T,EAAAA,EAAAA,GAAgB5O,EAAMA,OAAO,IAAEA,EAAMxE,MAAM,IAAEwE,EAAM2D,YAC3C,IAAI,8BA9CE/I,EAAAA,EAAAA,KAAA,OAAAE,SAAK,cAmDzB,EC3CA,GAlCmB,WAClB,IAAAkB,GAAwBC,EAAAA,EAAAA,UAAc,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCsS,EAAIpS,EAAA,GAAE+S,EAAO/S,EAAA,GACdiD,GAAiBC,EAAAA,EAAAA,MAoBvB,OAlBAkE,EAAAA,EAAAA,YAAU,WAET5B,EAAAA,EAAIwN,QAAQ/P,KAAkBwP,MAAK,SAACQ,GACnC,IAAIC,EAAwB,CAAC,EAE7BD,EAAItN,KAAKuF,SAAQ,SAACjE,QACqBiB,IAAlCgL,EAAiBjM,EAAI+J,WACxBkC,EAAiBjM,EAAI+J,SAAW,IAGjCkC,EAAiBjM,EAAI+J,SAAS5F,KAAKnE,EACpC,IAEAD,QAAQC,IAAImB,OAAOC,OAAO6K,IAC1BH,EAAQG,EACT,GACD,GAAG,KAGFlU,EAAAA,EAAAA,MAAA,OAAKL,UAAU,iBAAgBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,WAASC,UAAU,MAAKC,SAAC,qBACzBF,EAAAA,EAAAA,KAAA,WAASC,UAAU,OAAMC,SACvBwJ,OAAO+K,KAAKf,GAAMvT,KAAI,SAACmS,GAAO,OAC9BtS,EAAAA,EAAAA,KAAC0U,EAAO,CAAehB,KAAMA,EAAKpB,GAAUA,QAASA,GAAvCA,EAAkD,QAKrE,ECoQA,GAhRuB,WACtB,IAAMqC,GAAWC,EAAAA,EAAAA,MACX9U,GAAWC,EAAAA,EAAAA,MACX8U,GAAUC,EAAAA,EAAAA,MACVrQ,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAAcC,gBACpCmQ,GAAOC,EAAAA,EAAAA,MACP9T,GAAOmC,EAAAA,EAAAA,QAAO0R,KACdxQ,GAAiBC,EAAAA,EAAAA,MAEvBpD,GAAkDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D6T,EAAiB3T,EAAA,GAAE4T,EAAoB5T,EAAA,GAC9Ca,GAAgCd,EAAAA,EAAAA,UAAiB,IAAGe,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAA7CgT,EAAQ/S,EAAA,GAAEgT,EAAWhT,EAAA,GAC5BG,GAAgClB,EAAAA,EAAAA,UAAiB,IAAGmB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAA7C8S,EAAQ7S,EAAA,GAAE8S,EAAW9S,EAAA,GAEtB+S,GAAelS,EAAAA,EAAAA,QAAO,GAAD6O,QAAAC,EAAAA,EAAAA,GACtBjR,EAAKqC,QAAQzC,OAASD,EAASI,MAChC,CACD,CACCL,MAAO,QACPH,OAAQ,QACRC,KAAM8U,EAAAA,IAGN,IAAI,CACP,CACC5U,MAAO,cACPH,OAAQ,cACRC,KAAM+U,EAAAA,KACNtD,EAAAA,EAAAA,GACGjR,EAAKqC,QAAQzC,OAASD,EAASI,MAChC,CACD,CACCL,MAAO,QACPH,OAAQ,QACRC,KAAMgV,EAAAA,IAGN,KAAEvD,EAAAA,EAAAA,GACDjR,EAAKqC,QAAQzC,OAASD,EAASI,MAChC,CACD,CACCL,MAAO,WACPH,OAAQ,WACRC,KAAMiV,EAAAA,IAGN,KAAExD,EAAAA,EAAAA,GACDjR,EAAKqC,QAAQzC,OAASD,EAASI,MAChC,CACD,CACCL,MAAO,OACPH,OAAQ,OACRC,KAAMkV,EAAAA,IAGN,MAwDEC,EAAU,eAAAjW,GAAAyG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAqP,EAAA,OAAAxP,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIC,EAAAA,EAAIiP,SAASxR,KAAiB,OAA9CkC,EAAME,EAAAK,KAA0CC,KAChD6O,EAAgBrP,EAAOtG,KAAI,SAAC6V,GACjC,MAAO,CACNtU,KAAMsU,EAAItU,KACVG,SAAUmU,EAAInU,SACdf,KAAMkV,EAAIlV,KACVc,SAAUoU,EAAIpU,SAEhB,IACAwT,EAAYU,GAAO,wBAAAnP,EAAAO,OAAA,GAAAV,EAAA,KACnB,kBAXe,OAAA5G,EAAAuH,MAAA,KAAAC,UAAA,KAaV6O,EAAU,eAAA3O,GAAAjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAgB,IAAA,IAAAd,EAAAyP,EAAA,OAAA5P,EAAAA,EAAAA,KAAAI,MAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAd,KAAA,EACIC,EAAAA,EAAIqP,SAAS5R,KAAiB,OAA9CkC,EAAMkB,EAAAX,KAA0CC,KAChDiP,EAAgBzP,EAAOtG,KAAI,SAAC6V,GACjC,MAAO,CACNnO,IAAKmO,EAAInO,IACTnG,KAAMsU,EAAItU,KACV0U,QAAMtO,EAAAA,EAAAA,GAAA,GAAOkO,EAAII,QACjBC,OAAQL,EAAIK,OAEd,IACAf,EAAYY,GAAO,wBAAAvO,EAAAT,OAAA,GAAAK,EAAA,KACnB,kBAXe,OAAAD,EAAAH,MAAA,KAAAC,UAAA,MAahBsB,EAAAA,EAAAA,YAAU,WACLxH,EAAKqC,QAAQzC,OAASD,EAASI,QAClC4U,IACAI,IAEF,GAAG,KAEHvN,EAAAA,EAAAA,YAAU,WACJiM,EAAS,MAAM7U,EAASyV,EAAahS,QAAQ,GAAG9C,OACtD,GAAG,IAEH,IAAM6V,EAAY,eAAAtN,GAAA3C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA0C,IAAA,OAAA3C,EAAAA,EAAAA,KAAAI,MAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,OACD,OAAnB/G,EAAS,UAAUsJ,EAAAvC,KAAA,EACbC,EAAAA,EAAIyP,OAAO,CAChBC,cAAcC,EAAAA,EAAAA,QACZ,KAAD,EACFhS,EAAS,cACToQ,IAAU,wBAAAzL,EAAAlC,OAAA,GAAA+B,EAAA,KACV,kBAPiB,OAAAD,EAAA7B,MAAA,KAAAC,UAAA,KASZsP,EAAa,eAAAC,GAAAtQ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAiF,EAAOoL,EAAiBhV,GAAgB,OAAA0E,EAAAA,EAAAA,KAAAI,MAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,cAAA4E,EAAA7E,KAAA,EAAA6E,EAAA5E,KAAA,EAEtDC,EAAAA,EAAI+P,kCAAkC,CAC3CnV,KAAMkV,EAAUlV,KAChBG,SAAU+U,EAAU/U,SACpBf,KAAM8V,EAAU9V,KAChBc,SAAUA,EACVkV,YAAavS,MACX,KAAD,SAAAkH,EAAA5E,KAAA,EACIgP,IAAa,KAAD,EAClBpR,EAAS,cAAgBmS,EAAU/U,UAAU4J,EAAA5E,KAAA,gBAAA4E,EAAA7E,KAAA,EAAA6E,EAAA1D,GAAA0D,EAAA,SAE7C,IACChH,EAASuD,KAAKC,MAAMwD,EAAA1D,GAAMG,QAAQC,UAAUC,QAC7C,CAAE,MAAAC,GACD5D,EAAS,qCACT6D,QAAQC,IAAGkD,EAAA1D,GACZ,CAAC,yBAAA0D,EAAAvE,OAAA,GAAAsE,EAAA,kBAEF,gBAnBkBhD,EAAAC,GAAA,OAAAkO,EAAAxP,MAAA,KAAAC,UAAA,KAqBb2P,EAAgB,eAAAnL,GAAAvF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8F,EAAO2K,GAAkB,OAAA1Q,EAAAA,EAAAA,KAAAI,MAAA,SAAA6F,GAAA,cAAAA,EAAA3F,KAAA2F,EAAA1F,MAAA,UAC7CmQ,EAAanV,WAAaX,EAAKqC,QAAQ1B,SAAQ,CAAA0K,EAAA1F,KAAA,QACZ,OAAtCpC,EAAS,6BAA6B8H,EAAAlD,OAAA,wBAAAkD,EAAA3F,KAAA,EAAA2F,EAAA1F,KAAA,EAI/BC,EAAAA,EAAImQ,WAAWD,EAAanV,SAAU0C,KAAkB,KAAD,SAAAgI,EAAA1F,KAAA,GACvDgP,IAAa,KAAD,GAClBpR,EAAS,gBAAkBuS,EAAanV,UAAU0K,EAAA1F,KAAA,iBAAA0F,EAAA3F,KAAA,GAAA2F,EAAAxE,GAAAwE,EAAA,SAElD,IACC9H,EAASuD,KAAKC,MAAMsE,EAAAxE,GAAMG,QAAQC,UAAUC,QAC7C,CAAE,MAAAmB,GACD9E,EAAS,qCACT6D,QAAQC,IAAGgE,EAAAxE,GACZ,CAAC,yBAAAwE,EAAArF,OAAA,GAAAmF,EAAA,mBAGH,gBAlBqB5C,GAAA,OAAAmC,EAAAzE,MAAA,KAAAC,UAAA,KAoBhB8P,EAAa,eAAA9K,GAAA/F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA4Q,EAAOC,GAAe,OAAA9Q,EAAAA,EAAAA,KAAAI,MAAA,SAAA2Q,GAAA,cAAAA,EAAAzQ,KAAAyQ,EAAAxQ,MAAA,cAAAwQ,EAAAzQ,KAAA,EAAAyQ,EAAAxQ,KAAA,EAEpCC,EAAAA,EAAIwQ,QAAQ/S,IAAkB6S,GAAW,KAAD,SAAAC,EAAAxQ,KAAA,EACxCoP,IAAa,KAAD,EAClBxR,EAAS,cAAgB2S,EAAU1V,MAAM2V,EAAAxQ,KAAA,gBAAAwQ,EAAAzQ,KAAA,EAAAyQ,EAAAtP,GAAAsP,EAAA,SAEzC,IACC5S,EAASuD,KAAKC,MAAMoP,EAAAtP,GAAMG,QAAQC,UAAUC,QAC7C,CAAE,MAAAuD,GACDlH,EAAS,qCACT6D,QAAQC,IAAG8O,EAAAtP,GACZ,CAAC,yBAAAsP,EAAAnQ,OAAA,GAAAiQ,EAAA,kBAEF,gBAbkBrK,GAAA,OAAAV,EAAAjF,MAAA,KAAAC,UAAA,KAebmQ,EAAgB,eAAAC,GAAAnR,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkR,EAAOnK,GAAkB,OAAAhH,EAAAA,EAAAA,KAAAI,MAAA,SAAAgR,GAAA,cAAAA,EAAA9Q,KAAA8Q,EAAA7Q,MAAA,cAAA6Q,EAAA9Q,KAAA,EAAA8Q,EAAA7Q,KAAA,EAE1CC,EAAAA,EAAI6Q,WAAWpT,IAAkB+I,GAAc,KAAD,SAAAoK,EAAA7Q,KAAA,EAC9CoP,IAAa,KAAD,EAClBxR,EAAS,gBAAkB6I,EAAa5L,MAAMgW,EAAA7Q,KAAA,gBAAA6Q,EAAA9Q,KAAA,EAAA8Q,EAAA3P,GAAA2P,EAAA,SAE9C,IACCjT,EAASuD,KAAKC,MAAMyP,EAAA3P,GAAMG,QAAQC,UAAUC,QAC7C,CAAE,MAAAyE,GACDpI,EAAS,qCACT6D,QAAQC,IAAGmP,EAAA3P,GACZ,CAAC,yBAAA2P,EAAAxQ,OAAA,GAAAuQ,EAAA,kBAEF,gBAbqBG,GAAA,OAAAJ,EAAArQ,MAAA,KAAAC,UAAA,KAetB,OACC9G,EAAAA,EAAAA,MAAA,OAAKL,UAAU,kBAAiBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAC6X,EAAO,CAAChY,MAAO0V,EAAahS,WAC7BjD,EAAAA,EAAAA,MAAA,WAASL,UAAU,gBAAeC,SAAA,EACjCI,EAAAA,EAAAA,MAAA,WAASL,UAAU,oBAAmBC,SAAA,EACrCI,EAAAA,EAAAA,MAAA,UACCL,UAAU,eACVO,QAAS,kBAAM0U,GAAqB,SAACtO,GAAI,OAAMA,CAAI,GAAC,EAAC1G,SAAA,EAErDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBC,SAAEgB,EAAKqC,QAAQ7B,OAAa,KAC5D1B,EAAAA,EAAAA,KAAC8B,EAAY,CAAChB,KAAMI,EAAKqC,QAAQzC,UAEjCmU,IACA3U,EAAAA,EAAAA,MAAA,OAAKS,MAAO,CAAE+W,OAAQ,QAAS5X,SAAA,CAAC,aAE/BF,EAAAA,EAAAA,KAAA,SACCkB,EAAKqC,QAAQ1B,UACd7B,EAAAA,EAAAA,KAAA,UACCQ,QAAS8V,EACTvV,MAAO,CAAE2R,UAAW,OACpBzS,UAAU,eAAcC,SACxB,kBAMJF,EAAAA,EAAAA,KAAC+X,EAAAA,GAAM,CAAA7X,SApMH,GAANgS,QAAAC,EAAAA,EAAAA,GACKjR,EAAKqC,QAAQzC,OAASD,EAASI,MAChC,CACD,CACCR,OAAQ,QACRuX,SACChY,EAAAA,EAAAA,KAAC8V,EAAK,CACL9T,UAAW0U,EACXvV,SAAU4V,EACVhV,MAAOoT,MAKT,IAAI,CACP,CACC1U,OAAQ,cACRuX,SAAShY,EAAAA,EAAAA,KAACiY,EAAU,OACpB9F,EAAAA,EAAAA,GACGjR,EAAKqC,QAAQzC,OAASD,EAASI,MAChC,CACD,CACCR,OAAQ,QACRuX,SACChY,EAAAA,EAAAA,KAACkW,EAAK,CACL3K,MAAO8J,EACPrI,UAAWkK,EACXjK,aAAcsK,MAKhB,KAAEpF,EAAAA,EAAAA,GACDjR,EAAKqC,QAAQzC,OAASD,EAASI,MAChC,CACD,CACCR,OAAQ,WACRuX,SAAShY,EAAAA,EAAAA,KAACkY,EAAc,CAAC3M,MAAO8J,MAGhC,KAAElD,EAAAA,EAAAA,GACDjR,EAAKqC,QAAQzC,OAASD,EAASI,MAChC,CACD,CACCR,OAAQ,OACRuX,SAAShY,EAAAA,EAAAA,KAACmY,GAAU,MAGpB,KAqJYhY,KACZ,SAAAiY,EAKC/X,GAAS,IAHRI,EAAM2X,EAAN3X,OACAuX,EAAOI,EAAPJ,QAAO,OAIRhY,EAAAA,EAAAA,KAACqY,EAAAA,GAAK,CAASC,KAAM7X,EAAQuX,QAASA,GAA1B3X,EAAqC,WAOxD,C,+ECpSakS,GAASgG,EAAAA,EAAAA,IAAGC,EAAAA,E,4EC0GzB,IAxGsB,SAAH5Y,GAQZ,IAPNwF,EAAKxF,EAALwF,MACA+E,EAAOvK,EAAPuK,QACAC,EAAaxK,EAAbwK,cAMA,OACC9J,EAAAA,EAAAA,MAAA,OAAKL,UAAU,qBAAoBC,SAAA,EAClCI,EAAAA,EAAAA,MAAA,QAAML,UAAU,gBAAeC,SAAA,EAC9BF,EAAAA,EAAAA,KAACyY,EAAAA,EAAU,IAAG,YAGfzY,EAAAA,EAAAA,KAAA,MAAIC,UAAU,SAAQC,SAAEkF,EAAMxE,SAC9BN,EAAAA,EAAAA,MAAA,MAAIS,MAAO,CAAE2X,MAAO,OAASzY,UAAU,SAAQC,SAAA,CAC7CkF,EAAM2D,SAAS,SAAO,IACtB,IAAItD,KAAKL,EAAMI,WAAWmT,UAAYC,EAAAA,EAAe,EAAE,KAAG,IAC1D,IAAInT,KAAKL,EAAMI,WAAWwF,eAAe,QAAS,CAClDC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IACL,QAGLnL,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QACdK,EAAAA,EAAAA,MAAA,OAAKL,UAAU,0BAAyBC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,OAAAE,UACCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,SAAQC,SAAEkF,EAAMmG,MAAM,GAAG7J,UAExC1B,EAAAA,EAAAA,KAAA,KAAGC,UAAU,aAAYC,SAAC,QAC1BF,EAAAA,EAAAA,KAAA,OAAAE,UACCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,SAAQC,SAAEkF,EAAMmG,MAAM,GAAG7J,aAGzC1B,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QACdK,EAAAA,EAAAA,MAAA,OAAKL,UAAU,0BAAyBC,SAAA,EACvCI,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,SAAQC,SAAEkF,EAAMqC,MAAMoR,eACrC1O,IACA7J,EAAAA,EAAAA,MAAA0J,EAAAA,SAAA,CAAA9J,SAAA,EACCF,EAAAA,EAAAA,KAAA,UACCQ,QAAS,WACR4J,GAAatC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT1C,EAAMqC,OAAK,IACdoR,aAAczT,EAAMqC,MAAMoR,aAAe,KAE3C,EACA5Y,UAAU,eAAcC,SACxB,aAGDF,EAAAA,EAAAA,KAAA,UACCe,MAAO,CAAE2R,UAAW,OACpBlS,QAAS,WACR4J,GAAatC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT1C,EAAMqC,OAAK,IACdoR,aAAczT,EAAMqC,MAAMoR,aAAe,KAE3C,EACA5Y,UAAU,eAAcC,SACxB,qBAMJF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBACbK,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,SAAQC,SAAEkF,EAAMqC,MAAMqR,eACrC3O,IACA7J,EAAAA,EAAAA,MAAA0J,EAAAA,SAAA,CAAA9J,SAAA,EACCF,EAAAA,EAAAA,KAAA,UACCQ,QAAS,WACR4J,GAAatC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT1C,EAAMqC,OAAK,IACdqR,aAAc1T,EAAMqC,MAAMqR,aAAe,KAE3C,EACA7Y,UAAU,eAAcC,SACxB,aAGDF,EAAAA,EAAAA,KAAA,UACCe,MAAO,CAAE2R,UAAW,OACpBlS,QAAS,WACR4J,GAAatC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT1C,EAAMqC,OAAK,IACdqR,aAAc1T,EAAMqC,MAAMqR,aAAe,KAE3C,EACA7Y,UAAU,eAAcC,SACxB,yBASR,C,4ECEA,IAxGyB,SAAHN,GAQf,IAPNwF,EAAKxF,EAALwF,MACA+E,EAAOvK,EAAPuK,QACAC,EAAaxK,EAAbwK,cAMA,OACC9J,EAAAA,EAAAA,MAAA,OAAKL,UAAU,eAAcC,SAAA,EAC5BI,EAAAA,EAAAA,MAAA,QAAML,UAAU,gBAAeC,SAAA,EAC9BF,EAAAA,EAAAA,KAAC+Y,EAAAA,EAAgB,IAAG,eAGrB/Y,EAAAA,EAAAA,KAAA,MAAIC,UAAU,SAAQC,SAAEkF,EAAMxE,SAC9BN,EAAAA,EAAAA,MAAA,MAAIS,MAAO,CAAE2X,MAAO,OAASzY,UAAU,SAAQC,SAAA,CAC7CkF,EAAM2D,SAAS,SAAO,IACtB,IAAItD,KAAKL,EAAMI,WAAWmT,UAAYC,EAAAA,EAAe,EAAE,KAAG,IAC1D,IAAInT,KAAKL,EAAMI,WAAWwF,eAAe,QAAS,CAClDC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IACL,QAGLnL,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QACdK,EAAAA,EAAAA,MAAA,OAAKL,UAAU,0BAAyBC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,OAAAE,UACCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,SAAQC,SAAEkF,EAAMmG,MAAM,GAAG7J,UAExC1B,EAAAA,EAAAA,KAAA,KAAGC,UAAU,aAAYC,SAAC,QAC1BF,EAAAA,EAAAA,KAAA,OAAAE,UACCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,SAAQC,SAAEkF,EAAMmG,MAAM,GAAG7J,aAGzC1B,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QACdK,EAAAA,EAAAA,MAAA,OAAKL,UAAU,0BAAyBC,SAAA,EACvCI,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,SAAQC,SAAEkF,EAAMqC,MAAMoR,eACrC1O,IACA7J,EAAAA,EAAAA,MAAA0J,EAAAA,SAAA,CAAA9J,SAAA,EACCF,EAAAA,EAAAA,KAAA,UACCQ,QAAS,WACR4J,GAAatC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT1C,EAAMqC,OAAK,IACdoR,aAAczT,EAAMqC,MAAMoR,aAAe,IAE3C,EACA5Y,UAAU,eAAcC,SACxB,WAGDF,EAAAA,EAAAA,KAAA,UACCe,MAAO,CAAE2R,UAAW,OACpBlS,QAAS,WACR4J,GAAatC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT1C,EAAMqC,OAAK,IACdoR,aAAczT,EAAMqC,MAAMoR,aAAe,IAE3C,EACA5Y,UAAU,eAAcC,SACxB,mBAMJF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBACbK,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,SAAQC,SAAEkF,EAAMqC,MAAMqR,eACrC3O,IACA7J,EAAAA,EAAAA,MAAA0J,EAAAA,SAAA,CAAA9J,SAAA,EACCF,EAAAA,EAAAA,KAAA,UACCQ,QAAS,WACR4J,GAAatC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT1C,EAAMqC,OAAK,IACdqR,aAAc1T,EAAMqC,MAAMqR,aAAe,IAE3C,EACA7Y,UAAU,eAAcC,SACxB,WAGDF,EAAAA,EAAAA,KAAA,UACCe,MAAO,CAAE2R,UAAW,OACpBlS,QAAS,WACR4J,GAAatC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT1C,EAAMqC,OAAK,IACdqR,aAAc1T,EAAMqC,MAAMqR,aAAe,IAE3C,EACA7Y,UAAU,eAAcC,SACxB,uBASR,C,sFCOA,IA5GuB,SAAHN,GAQb,IAPNwF,EAAKxF,EAALwF,MACA+E,EAAOvK,EAAPuK,QACAC,EAAaxK,EAAbwK,cAMA,OACC9J,EAAAA,EAAAA,MAAA,OAAKL,UAAU,sBAAqBC,SAAA,EACnCI,EAAAA,EAAAA,MAAA,QAAML,UAAU,gBAAeC,SAAA,EAC9BF,EAAAA,EAAAA,KAACgZ,EAAAA,EAAgB,KACjBhZ,EAAAA,EAAAA,KAAA,QAAAE,SACEkF,EAAMA,QAAUwD,EAAAA,EAAgB2B,WAC9B,eACA,uBAGLvK,EAAAA,EAAAA,KAAA,MAAIC,UAAU,SAAQC,SAAEkF,EAAMxE,SAC9BN,EAAAA,EAAAA,MAAA,MAAIS,MAAO,CAAE2X,MAAO,OAASzY,UAAU,SAAQC,SAAA,CAC7CkF,EAAM2D,SAAS,SAAO,IACtB,IAAItD,KAAKL,EAAMI,WAAWmT,UAAYC,EAAAA,EAAe,EAAE,KAAG,IAC1D,IAAInT,KAAKL,EAAMI,WAAWwF,eAAe,QAAS,CAClDC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IACL,QAGLnL,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QACdK,EAAAA,EAAAA,MAAA,OAAKL,UAAU,0BAAyBC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,OAAAE,UACCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,SAAQC,SAAEkF,EAAMmG,MAAM,GAAG7J,UAExC1B,EAAAA,EAAAA,KAAA,KAAGC,UAAU,aAAYC,SAAC,QAC1BF,EAAAA,EAAAA,KAAA,OAAAE,UACCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,SAAQC,SAAEkF,EAAMmG,MAAM,GAAG7J,aAGzC1B,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QACdK,EAAAA,EAAAA,MAAA,OAAKL,UAAU,0BAAyBC,SAAA,EACvCI,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,SAAQC,SAAEkF,EAAMqC,MAAMoR,eACrC1O,IACA7J,EAAAA,EAAAA,MAAA0J,EAAAA,SAAA,CAAA9J,SAAA,EACCF,EAAAA,EAAAA,KAAA,UACCQ,QAAS,WACR4J,GAAatC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT1C,EAAMqC,OAAK,IACdoR,aAAczT,EAAMqC,MAAMoR,aAAe,IAE3C,EACA5Y,UAAU,eAAcC,SACxB,WAGDF,EAAAA,EAAAA,KAAA,UACCe,MAAO,CAAE2R,UAAW,OACpBlS,QAAS,WACR4J,GAAatC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT1C,EAAMqC,OAAK,IACdoR,aAAczT,EAAMqC,MAAMoR,aAAe,IAE3C,EACA5Y,UAAU,eAAcC,SACxB,mBAMJF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBACbK,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,SAAQC,SAAEkF,EAAMqC,MAAMqR,eACrC3O,IACA7J,EAAAA,EAAAA,MAAA0J,EAAAA,SAAA,CAAA9J,SAAA,EACCF,EAAAA,EAAAA,KAAA,UACCQ,QAAS,WACR4J,GAAatC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT1C,EAAMqC,OAAK,IACdqR,aAAc1T,EAAMqC,MAAMqR,aAAe,IAE3C,EACA7Y,UAAU,eAAcC,SACxB,WAGDF,EAAAA,EAAAA,KAAA,UACCe,MAAO,CAAE2R,UAAW,OACpBlS,QAAS,WACR4J,GAAatC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT1C,EAAMqC,OAAK,IACdqR,aAAc1T,EAAMqC,MAAMqR,aAAe,IAE3C,EACA7Y,UAAU,eAAcC,SACxB,uBASR,C,sFCIA,IA9GuB,SAAHN,GAQb,IAPNwF,EAAKxF,EAALwF,MACA+E,EAAOvK,EAAPuK,QACAC,EAAaxK,EAAbwK,cAMA,OACC9J,EAAAA,EAAAA,MAAA,OAAKL,UAAU,sBAAqBC,SAAA,EACnCI,EAAAA,EAAAA,MAAA,QAAML,UAAU,gBAAeC,SAAA,EAC9BF,EAAAA,EAAAA,KAACgZ,EAAAA,EAAgB,KACjBhZ,EAAAA,EAAAA,KAAA,QAAAE,SACEkF,EAAMA,QAAUwD,EAAAA,EAAgB8B,WAC9B,eACA,uBAGLpK,EAAAA,EAAAA,MAAA,MAAIL,UAAU,SAAQC,SAAA,CACpBkF,EAAMxE,MAAM,MAAIwE,EAAM6J,cAExB3O,EAAAA,EAAAA,MAAA,MAAIS,MAAO,CAAE2X,MAAO,OAASzY,UAAU,SAAQC,SAAA,CAC7CkF,EAAM2D,SAAS,SAAO,IACtB,IAAItD,KAAKL,EAAMI,WAAWmT,UAAYC,EAAAA,EAAe,EAAE,KAAG,IAC1D,IAAInT,KAAKL,EAAMI,WAAWwF,eAAe,QAAS,CAClDC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IACL,QAGLnL,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QACdK,EAAAA,EAAAA,MAAA,OAAKL,UAAU,0BAAyBC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,OAAAE,UACCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,SAAQC,SAAEkF,EAAMmG,MAAM,GAAG7J,UAExC1B,EAAAA,EAAAA,KAAA,KAAGC,UAAU,aAAYC,SAAC,QAC1BF,EAAAA,EAAAA,KAAA,OAAAE,UACCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,SAAQC,SAAEkF,EAAMmG,MAAM,GAAG7J,aAGzC1B,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QACdK,EAAAA,EAAAA,MAAA,OAAKL,UAAU,0BAAyBC,SAAA,EACvCI,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,SAAQC,SAAEkF,EAAMqC,MAAMoR,eACrC1O,IACA7J,EAAAA,EAAAA,MAAA0J,EAAAA,SAAA,CAAA9J,SAAA,EACCF,EAAAA,EAAAA,KAAA,UACCQ,QAAS,WACR4J,GAAatC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT1C,EAAMqC,OAAK,IACdoR,aAAczT,EAAMqC,MAAMoR,aAAe,IAE3C,EACA5Y,UAAU,eAAcC,SACxB,WAGDF,EAAAA,EAAAA,KAAA,UACCe,MAAO,CAAE2R,UAAW,OACpBlS,QAAS,WACR4J,GAAatC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT1C,EAAMqC,OAAK,IACdoR,aAAczT,EAAMqC,MAAMoR,aAAe,IAE3C,EACA5Y,UAAU,eAAcC,SACxB,mBAMJF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBACbK,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,SAAQC,SAAEkF,EAAMqC,MAAMqR,eACrC3O,IACA7J,EAAAA,EAAAA,MAAA0J,EAAAA,SAAA,CAAA9J,SAAA,EACCF,EAAAA,EAAAA,KAAA,UACCQ,QAAS,WACR4J,GAAatC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT1C,EAAMqC,OAAK,IACdqR,aAAc1T,EAAMqC,MAAMqR,aAAe,IAE3C,EACA7Y,UAAU,eAAcC,SACxB,WAGDF,EAAAA,EAAAA,KAAA,UACCe,MAAO,CAAE2R,UAAW,OACpBlS,QAAS,WACR4J,GAAatC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT1C,EAAMqC,OAAK,IACdqR,aAAc1T,EAAMqC,MAAMqR,aAAe,IAE3C,EACA7Y,UAAU,eAAcC,SACxB,uBASR,C","sources":["components/Sidebar.tsx","types/UserRole.ts","components/UserRoleChip.tsx","Screens/Admin/components/UserRow.tsx","Screens/Admin/Users.tsx","types/AthleticsEventTypes.ts","Screens/Admin/EditScores.tsx","Screens/Admin/components/TeamRow.tsx","Screens/Admin/Teams.tsx","types/TennisEvent.ts","types/AthleticsRounds.ts","Screens/Admin/ScheduleEditor.tsx","components/LogItem.tsx","Screens/Admin/components/LogsViewer.tsx","Screens/Admin/AdminDashboard.tsx","Utilities/Socket.ts","components/LiveEventBoxes/ChessEventBox.tsx","components/LiveEventBoxes/FootballEventBox.tsx","components/LiveEventBoxes/SquashEventBox.tsx","components/LiveEventBoxes/TennisEventBox.tsx"],"sourcesContent":["import { useNavigate } from \"react-router\";\r\nimport \"./Sidebar.css\";\r\n\r\nconst SideBar = ({\r\n\titems,\r\n}: {\r\n\titems: {\r\n\t\ttitle: string;\r\n\t\tlinkTo: string;\r\n\t\ticon: any;\r\n\t}[];\r\n}) => {\r\n\tconst navigate = useNavigate();\r\n\r\n\treturn (\r\n\t\t<div className=\"sidebar\">\r\n\t\t\t<div className=\"items\">\r\n\t\t\t\t{items.map((item, i) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"item\"\r\n\t\t\t\t\t\ttabIndex={1}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tonClick={() => navigate(item.linkTo)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<item.icon fontSize=\"large\" />\r\n\t\t\t\t\t\t<span className=\"title\">{item.title}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SideBar;\r\n","export enum UserRole {\r\n  ADMIN = \"Admin\",\r\n  SCORE_EDITOR = \"ScoreEditor\",\r\n}\r\n","import { UserRole } from \"../types/UserRole\";\r\nimport \"./UserRoleChip.css\";\r\n\r\nconst UserRoleChip = ({ role }: { role: UserRole }) => {\r\n\treturn (\r\n\t\t<span\r\n\t\t\tstyle={{ backgroundColor: role === UserRole.ADMIN ? \"red\" : \"green\" }}\r\n\t\t\tclassName=\"chip\"\r\n\t\t>\r\n\t\t\t{role}\r\n\t\t</span>\r\n\t);\r\n};\r\n\r\nexport default UserRoleChip;\r\n","import { useState } from \"react\";\r\nimport UserRoleChip from \"../../../components/UserRoleChip\";\r\nimport { User } from \"../../../types/User\";\r\n\r\nconst UserRow = ({\r\n\tuser,\r\n\tonDelete,\r\n}: {\r\n\tuser: User;\r\n\tonDelete: (userToDelete: User) => void;\r\n}) => {\r\n\tconst [showPassword, setShowPassword] = useState(false);\r\n\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<td>{user.name}</td>\r\n\t\t\t<td\r\n\t\t\t\tclassName=\"noTextTransform\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetShowPassword(true);\r\n\t\t\t\t\tsetTimeout(() => setShowPassword(false), 2000);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{showPassword ? user.password : user.username}\r\n\t\t\t</td>\r\n\t\t\t<td className=\"chipCell\">\r\n\t\t\t\t<UserRoleChip role={user.role} />\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button className=\"styledButton\" onClick={() => onDelete(user)}>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n};\r\n\r\nexport default UserRow;\r\n","import { useRef, useState } from \"react\";\r\nimport { User } from \"../../types/User\";\r\nimport \"./Users.css\";\r\nimport { UserRole } from \"../../types/UserRole\";\r\nimport UserRow from \"./components/UserRow\";\r\n\r\nconst Users = ({\r\n\tusers,\r\n\tonDelete,\r\n\tonUserAdd,\r\n}: {\r\n\tusers: User[];\r\n\tonDelete: (userToDelete: User) => void;\r\n\tonUserAdd: (userToAdd: User, password: string) => void;\r\n}) => {\r\n\tconst [newName, setNewName] = useState(\"\");\r\n\tconst [newUsername, setNewUsername] = useState(\"\");\r\n\tconst [newPassword, setNewPassword] = useState(\"\");\r\n\tconst [errorMsg, setErrorMsg] = useState(\"\");\r\n\tconst [newRole, setNewRole] = useState(UserRole.SCORE_EDITOR);\r\n\r\n\tconst addUserDialog = useRef<HTMLDialogElement | null>(null);\r\n\r\n\tconst openDialog = () => {\r\n\t\taddUserDialog.current?.showModal();\r\n\t\tsetNewName(\"\");\r\n\t\tsetNewUsername(\"\");\r\n\t\tsetNewPassword(\"\");\r\n\t};\r\n\tconst closeDialog = () => {\r\n\t\taddUserDialog.current?.close();\r\n\t};\r\n\r\n\tconst handleAddUser = (e: any) => {\r\n\t\te.preventDefault();\r\n\t\tif (newName === \"\" || newUsername === \"\" || newPassword === \"\") {\r\n\t\t\tsetErrorMsg(\"Enter Name, Username and Password!\");\r\n\t\t\tsetTimeout(() => setErrorMsg(\"\"), 3000);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tonUserAdd(\r\n\t\t\t{ name: newName, username: newUsername, role: newRole },\r\n\t\t\tnewPassword\r\n\t\t);\r\n\t\taddUserDialog.current?.close();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"usersContainer\">\r\n\t\t\t<section className=\"top\">\r\n\t\t\t\t<button onClick={openDialog} className=\"styledButton\">\r\n\t\t\t\t\tAdd User\r\n\t\t\t\t</button>\r\n\t\t\t\t<dialog ref={addUserDialog}>\r\n\t\t\t\t\t<button className=\"styledButton\" onClick={closeDialog}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<h3>Add User Details</h3>\r\n\t\t\t\t\t<form onSubmit={handleAddUser}>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label>Name</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname=\"Name\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => setNewName(e.target.value)}\r\n\t\t\t\t\t\t\t\tvalue={newName}\r\n\t\t\t\t\t\t\t\tclassName=\"styledInput\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label>Username</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname=\"Username\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => setNewUsername(e.target.value)}\r\n\t\t\t\t\t\t\t\tvalue={newUsername}\r\n\t\t\t\t\t\t\t\tclassName=\"styledInput\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname=\"Password\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => setNewPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\tvalue={newPassword}\r\n\t\t\t\t\t\t\t\tclassName=\"styledInput\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label>Role</label>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tonChange={(e) => setNewRole(e.target.value as UserRole)}\r\n\t\t\t\t\t\t\t\tvalue={newRole}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton dropdown\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value={UserRole.ADMIN}>{UserRole.ADMIN}</option>\r\n\t\t\t\t\t\t\t\t<option value={UserRole.SCORE_EDITOR}>\r\n\t\t\t\t\t\t\t\t\t{UserRole.SCORE_EDITOR}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button className=\"styledButton\" type=\"submit\">\r\n\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t{errorMsg}\r\n\t\t\t\t</dialog>\r\n\t\t\t</section>\r\n\t\t\t<section className=\"main\">\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>Name</td>\r\n\t\t\t\t\t\t\t<td>Username</td>\r\n\t\t\t\t\t\t\t<td>Role</td>\r\n\t\t\t\t\t\t\t<td>Action</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{users.map((user, i) => (\r\n\t\t\t\t\t\t\t<UserRow key={i} user={user} onDelete={onDelete} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Users;\r\n","enum AthleticsEventTypes {\r\n\tMEN_5000 = \"5000m (M)\",\r\n\tMEN_1500 = \"1500m (M)\",\r\n\tWOMEN_1500 = \"1500m (W)\",\r\n\tMEN_800 = \"800m (M)\",\r\n\tWOMEN_800 = \"800m (W)\",\r\n\tMEN_400 = \"400m (M)\",\r\n\tWOMEN_400 = \"400m (W)\",\r\n\tMEN_200 = \"200m (M)\",\r\n\tWOMEN_200 = \"200m (W)\",\r\n\tMEN_100 = \"100m (M)\",\r\n\tWOMEN_100 = \"100m (W)\",\r\n\tMEN_4X100 = \"4x100m (M)\",\r\n\tWOMEN_4X100 = \"4x100m (W)\",\r\n\tMEN_4X400 = \"4x400m (M)\",\r\n\tWOMEN_4X400 = \"4x400m (W)\",\r\n\tMEN_110_HURDLES = \"110m Hurdles (M)\",\r\n\tMEN_400_HURDLES = \"400m Hurdles (M)\",\r\n\tMEN_HAMMER_THROW = \"Hammer Throw (M)\",\r\n\tMEN_DISK_THROW = \"Discus Throw (M)\",\r\n\tWOMEN_DISK_THROW = \"Discus Throw (W)\",\r\n\tMEN_POLE_VAULT = \"Pole Vault (M)\",\r\n\tMEN_SHOT_PUT = \"Shot Put (M)\",\r\n\tWOMEN_SHOT_PUT = \"Shot Put (W)\",\r\n\tMEN_TRIPLE_JUMP = \"Triple Jump (M)\",\r\n\tMEN_JAVELIN_THROW = \"Javelin Throw (M)\",\r\n\tWOMEN_JAVELIN_THROW = \"Javelin Throw (W)\",\r\n\tMEN_HIGH_JUMP = \"High Jump (M)\",\r\n\tWOMEN_HIGH_JUMP = \"High Jump (W)\",\r\n\tMEN_LONG_JUMP = \"Long Jump (M)\",\r\n\tWOMEN_LONG_JUMP = \"Long Jump (W)\",\r\n}\r\n\r\nenum AthleticsEventWithDistance {\r\n\tMEN_HAMMER_THROW = \"Hammer Throw (M)\",\r\n\tMEN_DISK_THROW = \"Discus Throw (M)\",\r\n\tWOMEN_DISK_THROW = \"Discus Throw (W)\",\r\n\tMEN_POLE_VAULT = \"Pole Vault (M)\",\r\n\tMEN_SHOT_PUT = \"Shot Put (M)\",\r\n\tWOMEN_SHOT_PUT = \"Shot Put (W)\",\r\n\tMEN_TRIPLE_JUMP = \"Triple Jump (M)\",\r\n\tMEN_JAVELIN_THROW = \"Javelin Throw (M)\",\r\n\tWOMEN_JAVELIN_THROW = \"Javelin Throw (W)\",\r\n\tMEN_HIGH_JUMP = \"High Jump (M)\",\r\n\tWOMEN_HIGH_JUMP = \"High Jump (W)\",\r\n\tMEN_LONG_JUMP = \"Long Jump (M)\",\r\n\tWOMEN_LONG_JUMP = \"Long Jump (W)\",\r\n}\r\nexport { AthleticsEventWithDistance };\r\n\r\nexport default AthleticsEventTypes;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport \"./EditScores.css\";\r\nimport { useEffect, useMemo, useState, useContext, useRef } from \"react\";\r\nimport Event from \"../../types/Event\";\r\nimport EventCatagories from \"../../types/EventCategories\";\r\nimport FootballEvent from \"../../types/FootballEvent\";\r\nimport FootballEventBox from \"../../components/LiveEventBoxes/FootballEventBox\";\r\nimport API from \"../../Utilities/ApiEndpoints\";\r\nimport { useAuthHeader } from \"react-auth-kit\";\r\nimport { ToastContext } from \"../../Utilities/ToastContext\";\r\nimport ChessEventBox from \"../../components/LiveEventBoxes/ChessEventBox\";\r\nimport ChessEvent from \"../../types/ChessEvent\";\r\nimport SquashEventBox from \"../../components/LiveEventBoxes/SquashEventBox\";\r\nimport SquashEvent from \"../../types/SquashEvent\";\r\nimport TennisEventBox from \"../../components/LiveEventBoxes/TennisEventBox\";\r\nimport TennisEvent from \"../../types/TennisEvent\";\r\nimport AthleticsEvent, { Participant } from \"../../types/AthleticsEvent\";\r\nimport { AthleticsEventWithDistance } from \"../../types/AthleticsEventTypes\";\r\n\r\nconst EVENT_START_BUFFER = 15 * 60 * 1000; //in milliseconds\r\n\r\nconst EditScores = () => {\r\n\tconst getAccessToken = useAuthHeader();\r\n\tconst setToast = useContext(ToastContext).setToastMessage;\r\n\r\n\tconst [loading, setLoading] = useState(true);\r\n\r\n\tconst [allEvents, setAllEvents] = useState<Event[]>([]);\r\n\tconst liveEvents = useMemo(() => allEvents.filter(event => event.isStarted), [allEvents]);\r\n\tconst liveAbleEvents = useMemo(\r\n\t\t() =>\r\n\t\t\tallEvents.filter(\r\n\t\t\t\te => !e.isCompleted && (e.startTime as number) <= new Date().getTime() + EVENT_START_BUFFER\r\n\t\t\t),\r\n\t\t[allEvents]\r\n\t);\r\n\tconst [eventToToggle, setEventToToggle] = useState<Event>();\r\n\tconst confirmToggleDialog = useRef<HTMLDialogElement | null>(null);\r\n\tconst athlEventWinnerDialog = useRef<HTMLDialogElement | null>(null);\r\n\r\n\tconst openDialog = () => {\r\n\t\tconfirmToggleDialog.current?.showModal();\r\n\t};\r\n\tconst closeDialog = () => {\r\n\t\tconfirmToggleDialog.current?.close();\r\n\t\tathlEventWinnerDialog.current?.close();\r\n\t};\r\n\r\n\tconst fetchEvents = async () => {\r\n\t\tconst result: Event[] = (await API.GetEvents()).data;\r\n\t\tsetAllEvents(result);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst handleScoreUpdate = async (id: string, score: any) => {\r\n\t\ttry {\r\n\t\t\tawait API.UpdateScore(getAccessToken(), id, score);\r\n\t\t\tconst newEvents = allEvents.map(e => {\r\n\t\t\t\tif (e._id === id) return { ...e, score: score };\r\n\t\t\t\telse return e;\r\n\t\t\t});\r\n\t\t\tsetAllEvents(newEvents);\r\n\t\t} catch (error: any) {\r\n\t\t\ttry {\r\n\t\t\t\tsetToast(JSON.parse(error.request.response).message);\r\n\t\t\t} catch {\r\n\t\t\t\tsetToast(\"Could not connect with the Server\");\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchEvents();\r\n\t}, []);\r\n\r\n\tconst getEventBox = (event: Event, i: number): React.JSX.Element => {\r\n\t\tswitch (event.event) {\r\n\t\t\tcase EventCatagories.FOOTBALL:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<FootballEventBox\r\n\t\t\t\t\t\tisAdmin\r\n\t\t\t\t\t\tonScoreUpdate={score => handleScoreUpdate(event._id!, score)}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tevent={event as FootballEvent}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase EventCatagories.CHESS:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ChessEventBox\r\n\t\t\t\t\t\tisAdmin\r\n\t\t\t\t\t\tonScoreUpdate={score => handleScoreUpdate(event._id!, score)}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tevent={event as ChessEvent}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase EventCatagories.SQUASH_MEN || EventCatagories.SQUASH_WOMEN:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<SquashEventBox\r\n\t\t\t\t\t\tisAdmin\r\n\t\t\t\t\t\tonScoreUpdate={score => handleScoreUpdate(event._id!, score)}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tevent={event as SquashEvent}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase EventCatagories.TENNIS_MEN || EventCatagories.TENNIS_WOMEN:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<TennisEventBox\r\n\t\t\t\t\t\tisAdmin\r\n\t\t\t\t\t\tonScoreUpdate={score => handleScoreUpdate(event._id!, score)}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tevent={event as TennisEvent}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tdefault:\r\n\t\t\t\treturn <></>;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"usersContainer\">\r\n\t\t\t<div className=\"top\" style={{ fontWeight: \"600\" }}>\r\n\t\t\t\tLive Events\r\n\t\t\t\t<dialog ref={confirmToggleDialog}>\r\n\t\t\t\t\t<button className=\"styledButton\" onClick={closeDialog}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<h3>Caution</h3>\r\n\t\t\t\t\tAre you sure you want to end this event?\r\n\t\t\t\t\t<br />{\" \"}\r\n\t\t\t\t\t<b>\r\n\t\t\t\t\t\t{eventToToggle?.event}{\" \"}\r\n\t\t\t\t\t\t{eventToToggle?.event === EventCatagories.ATHLETICS\r\n\t\t\t\t\t\t\t? (eventToToggle as AthleticsEvent)?.athleticsEventType\r\n\t\t\t\t\t\t\t: eventToToggle?.title}{\" \"}\r\n\t\t\t\t\t\t|{\" \"}\r\n\t\t\t\t\t\t{eventToToggle?.event === EventCatagories.ATHLETICS\r\n\t\t\t\t\t\t\t? (eventToToggle as AthleticsEvent)?.title\r\n\t\t\t\t\t\t\t: eventToToggle?.subtitle}\r\n\t\t\t\t\t</b>\r\n\t\t\t\t\t<form\r\n\t\t\t\t\t\tonSubmit={async e => {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tif (eventToToggle?.event === EventCatagories.ATHLETICS) {\r\n\t\t\t\t\t\t\t\tconfirmToggleDialog.current?.close();\r\n\t\t\t\t\t\t\t\tathlEventWinnerDialog.current!.showModal();\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tawait API.ToggleEventStatus(getAccessToken(), eventToToggle!._id!);\r\n\t\t\t\t\t\t\t\tsetToast(\"Successfull\");\r\n\t\t\t\t\t\t\t\tsetLoading(true);\r\n\t\t\t\t\t\t\t\tfetchEvents();\r\n\t\t\t\t\t\t\t} catch (error: any) {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tsetToast(JSON.parse(error.request.response).message);\r\n\t\t\t\t\t\t\t\t} catch {\r\n\t\t\t\t\t\t\t\t\tsetToast(\"Could not connect with the Server\");\r\n\t\t\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconfirmToggleDialog.current?.close();\r\n\t\t\t\t\t\t\tsetEventToToggle(undefined);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<button className=\"styledButton\" type=\"submit\">\r\n\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</dialog>\r\n\t\t\t\t{eventToToggle?.event === EventCatagories.ATHLETICS && (\r\n\t\t\t\t\t<dialog ref={athlEventWinnerDialog}>\r\n\t\t\t\t\t\t<button className=\"styledButton\" onClick={closeDialog}>\r\n\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t{(Object.values(AthleticsEventWithDistance) as any[]).includes(\r\n\t\t\t\t\t\t\t\t(eventToToggle as AthleticsEvent).athleticsEventType\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t? \"Enter Distances (In meter)\"\r\n\t\t\t\t\t\t\t\t: \"Enter Times (min:sec:millisec)\"}\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t<AthlEventParticipantDetailsForm\r\n\t\t\t\t\t\t\tevent={eventToToggle as AthleticsEvent}\r\n\t\t\t\t\t\t\tonSuccess={() => {\r\n\t\t\t\t\t\t\t\tathlEventWinnerDialog.current?.close();\r\n\t\t\t\t\t\t\t\tsetEventToToggle(undefined);\r\n\t\t\t\t\t\t\t\tsetLoading(true);\r\n\t\t\t\t\t\t\t\tfetchEvents();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</dialog>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"main\">\r\n\t\t\t\t{!loading ? (\r\n\t\t\t\t\tliveEvents && (\r\n\t\t\t\t\t\t<section className=\"liveEvents\">\r\n\t\t\t\t\t\t\t{liveEvents.map((event, i) => getEventBox(event, i))}\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>Loading Events Data...</>\r\n\t\t\t\t)}\r\n\t\t\t\t<section className=\"liveAbleEvents\">\r\n\t\t\t\t\t{liveAbleEvents.length !== 0 ? (\r\n\t\t\t\t\t\tliveAbleEvents.map((event, i) => (\r\n\t\t\t\t\t\t\t<div key={i}>\r\n\t\t\t\t\t\t\t\t{event.event} -{\" \"}\r\n\t\t\t\t\t\t\t\t{(event as AthleticsEvent).athleticsEventType\r\n\t\t\t\t\t\t\t\t\t? (event as AthleticsEvent).athleticsEventType + \" - \"\r\n\t\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t\t\t{event.title} - {new Date(event.startTime).toLocaleDateString(\"en-GB\")} - Start\r\n\t\t\t\t\t\t\t\tTime:{\" \"}\r\n\t\t\t\t\t\t\t\t{new Date(event.startTime).toLocaleString(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\thour: \"numeric\",\r\n\t\t\t\t\t\t\t\t\tminute: \"numeric\",\r\n\t\t\t\t\t\t\t\t\thour12: true,\r\n\t\t\t\t\t\t\t\t})}{\" \"}\r\n\t\t\t\t\t\t\t\t- {event.isStarted ? <span className=\"chip\">Is Live</span> : \"Not Live\"}\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t{event.event === EventCatagories.ATHLETICS\r\n\t\t\t\t\t\t\t\t\t\t? (event as AthleticsEvent).participants[0].map((p, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{p.name} : {p.team}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t  ))\r\n\t\t\t\t\t\t\t\t\t\t: event.teams.map((team, i) => <li key={i}>{team.name} </li>)}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\t\t\t\tif (event!.isStarted) {\r\n\t\t\t\t\t\t\t\t\t\t\tif ((event!.endTime as number) > new Date().getTime()) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetToast(\"Can't end this event right now!\");\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tsetEventToToggle(event);\r\n\t\t\t\t\t\t\t\t\t\t\topenDialog();\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\t\tawait API.ToggleEventStatus(getAccessToken(), event!._id!);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetToast(\"Successfull\");\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetLoading(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\tfetchEvents();\r\n\t\t\t\t\t\t\t\t\t\t\t} catch (error: any) {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetToast(JSON.parse(error.request.response).message);\r\n\t\t\t\t\t\t\t\t\t\t\t\t} catch {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetToast(\"Could not connect with the Server\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{event.isStarted ? \"End Event\" : \"Go Live\"}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>No Events which can be toggled live!</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default EditScores;\r\n\r\nconst AthlEventParticipantDetailsForm = ({\r\n\tevent,\r\n\tonSuccess,\r\n}: {\r\n\tevent: AthleticsEvent;\r\n\tonSuccess: () => void;\r\n}) => {\r\n\tconst getAccessToken = useAuthHeader();\r\n\tconst setToast = useContext(ToastContext).setToastMessage;\r\n\tconst [participants, setParticipants] = useState(event.participants[0]);\r\n\r\n\tconst getMillis = (time: string) => {\r\n\t\tconst timeParts = time.split(\":\");\r\n\t\tlet millis = Number(timeParts[0]) * 60 * 1000;\r\n\t\tif (timeParts.length >= 2) millis += Number(timeParts[1]) * 1000;\r\n\t\tif (timeParts.length >= 3) millis += Number(timeParts[2]);\r\n\t\treturn millis;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form\r\n\t\t\tonSubmit={async e => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tlet newParticipants: Participant[] = [];\r\n\t\t\t\tparticipants.forEach(p => {\r\n\t\t\t\t\tif (p.detail === undefined) {\r\n\t\t\t\t\t\tsetToast(\"Incomplete Details\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewParticipants.push(\r\n\t\t\t\t\t\t(Object.values(AthleticsEventWithDistance) as any[]).includes(\r\n\t\t\t\t\t\t\t(event as AthleticsEvent).athleticsEventType\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t? { name: p.name, team: p.team, distance: Number(p.detail) }\r\n\t\t\t\t\t\t\t: { name: p.name, team: p.team, time: getMillis(p.detail) }\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait API.SetAthleticsEventDetails(getAccessToken(), event._id!, newParticipants);\r\n\t\t\t\t\tawait API.ToggleEventStatus(getAccessToken(), event!._id!);\r\n\t\t\t\t\tsetToast(\"Successfull\");\r\n\t\t\t\t\tonSuccess();\r\n\t\t\t\t} catch (error: any) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tsetToast(JSON.parse(error.request.response).message);\r\n\t\t\t\t\t} catch {\r\n\t\t\t\t\t\tsetToast(\"Could not connect with the Server\");\r\n\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{participants.map((p, i) => (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label>{p.name}</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"details\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\tsetParticipants(\r\n\t\t\t\t\t\t\t\tparticipants.map(op =>\r\n\t\t\t\t\t\t\t\t\top.name === p.name ? { ...op, detail: e.target.value } : op\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvalue={participants[i].detail}\r\n\t\t\t\t\t\tclassName=\"styledInput\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t\t<button className=\"styledButton\" type=\"submit\">\r\n\t\t\t\tSubmit\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n","import { Team } from \"../../../types/Team\";\r\n\r\nconst TeamRow = ({\r\n\tteam,\r\n\tonDelete,\r\n}: {\r\n\tteam: Team;\r\n\tonDelete: (teamToDelete: Team) => void;\r\n}) => {\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<td>{team.name}</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button onClick={() => onDelete(team)} className=\"styledButton\">\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n};\r\n\r\nexport default TeamRow;\r\n","import { useRef, useState } from \"react\";\r\nimport TeamRow from \"./components/TeamRow\";\r\nimport { Team } from \"../../types/Team\";\r\n\r\nconst Teams = ({\r\n\tteams,\r\n\tonTeamAdd,\r\n\tonTeamDelete,\r\n}: {\r\n\tteams: Team[];\r\n\tonTeamAdd: (teamToAdd: Team) => void;\r\n\tonTeamDelete: (teamToDelete: Team) => void;\r\n}) => {\r\n\tconst addTeamDialog = useRef<HTMLDialogElement | null>(null);\r\n\tconst confirmDeleteDialog = useRef<HTMLDialogElement | null>(null);\r\n\tconst [newTeamName, setNewTeamName] = useState(\"\");\r\n\tconst [teamToDelete, setTeamToDelete] = useState<Team>();\r\n\tconst [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n\tconst openDialog = () => {\r\n\t\taddTeamDialog.current?.showModal();\r\n\t};\r\n\tconst closeDialog = () => {\r\n\t\taddTeamDialog.current?.close();\r\n\t\tconfirmDeleteDialog.current?.close();\r\n\t};\r\n\r\n\tconst handleAddTeam = (e: any) => {\r\n\t\te.preventDefault();\r\n\t\tif (newTeamName === \"\") {\r\n\t\t\tsetErrorMsg(\"Enter Name!\");\r\n\t\t\tsetTimeout(() => setErrorMsg(\"\"), 3000);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tonTeamAdd({ name: newTeamName });\r\n\t\taddTeamDialog.current?.close();\r\n\t};\r\n\r\n\tconst confirmTeamDelete = (teamToDelete: Team) => {\r\n\t\tsetTeamToDelete(teamToDelete);\r\n\t\tconfirmDeleteDialog.current?.showModal();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"usersContainer\">\r\n\t\t\t<div className=\"top\">\r\n\t\t\t\t<button onClick={openDialog} className=\"styledButton\">\r\n\t\t\t\t\tAdd Team\r\n\t\t\t\t</button>\r\n\t\t\t\t<dialog ref={addTeamDialog}>\r\n\t\t\t\t\t<button className=\"styledButton\" onClick={closeDialog}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<h3>Add Team Details</h3>\r\n\t\t\t\t\t<form onSubmit={handleAddTeam}>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label>Name</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname=\"Name\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => setNewTeamName(e.target.value)}\r\n\t\t\t\t\t\t\t\tvalue={newTeamName}\r\n\t\t\t\t\t\t\t\tclassName=\"styledInput\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button className=\"styledButton\" type=\"submit\">\r\n\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t{errorMsg}\r\n\t\t\t\t</dialog>\r\n\t\t\t\t<dialog ref={confirmDeleteDialog}>\r\n\t\t\t\t\t<button className=\"styledButton\" onClick={closeDialog}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<h3>Caution</h3>\r\n\t\t\t\t\tAre you sure you want to Delete\r\n\t\t\t\t\t<br /> <b>{teamToDelete?.name} ?</b>\r\n\t\t\t\t\t<form\r\n\t\t\t\t\t\tonSubmit={(e) => {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tonTeamDelete(teamToDelete as Team);\r\n\t\t\t\t\t\t\tconfirmDeleteDialog.current?.close();\r\n\t\t\t\t\t\t\tsetTeamToDelete(undefined);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<button className=\"styledButton\" type=\"submit\">\r\n\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</dialog>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"main\">\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>Team Name</td>\r\n\t\t\t\t\t\t\t<td>Action</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{teams.map((team, i) => (\r\n\t\t\t\t\t\t\t<TeamRow key={i} team={team} onDelete={confirmTeamDelete} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Teams;\r\n","import Event from \"./Event\";\r\nimport { Team } from \"./Team\";\r\n\r\nexport default interface TennisEvent extends Event {\r\n\tmatchType: MatchTypes;\r\n\twinner?: {\r\n\t\tteam: Team;\r\n\t\tparticipants: string[];\r\n\t};\r\n\tscore: TennisScore;\r\n}\r\n\r\nexport interface TennisScore {\r\n\tteamA_points: number;\r\n\tteamB_points: number;\r\n}\r\n\r\nexport enum MatchTypes {\r\n\tDOUBLES = \"Doubles\",\r\n\tSINGLES = \"Singles\",\r\n}\r\n","enum AthleticsRounds {\r\n\tSEMIS = \"Semi-Final\",\r\n\tFINAL = \"Final\",\r\n}\r\nexport default AthleticsRounds;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport \"handsontable/dist/handsontable.full.min.css\";\r\nimport { HotTable } from \"@handsontable/react\";\r\nimport {\r\n\tregisterCellType,\r\n\tTimeCellType,\r\n\tDropdownCellType,\r\n\tDateCellType,\r\n} from \"handsontable/cellTypes\";\r\nimport { registerPlugin, ExportFile, CopyPaste } from \"handsontable/plugins\";\r\nimport EventCatagories from \"../../types/EventCategories\";\r\nimport { Team } from \"../../types/Team\";\r\nimport { useRef, useContext, useState, useEffect, useMemo } from \"react\";\r\nimport \"./ScheduleEditor.css\";\r\nimport { ToastContext } from \"../../Utilities/ToastContext\";\r\nimport API from \"../../Utilities/ApiEndpoints\";\r\nimport Event from \"../../types/Event\";\r\nimport { useAuthHeader } from \"react-auth-kit\";\r\nimport { socket } from \"../../Utilities/Socket\";\r\nimport { MatchTypes } from \"../../types/TennisEvent\";\r\nimport AthleticsEventTypes from \"../../types/AthleticsEventTypes\";\r\nimport AthleticsRounds from \"../../types/AthleticsRounds\";\r\nimport AthleticsEvent from \"../../types/AthleticsEvent\";\r\n\r\nregisterCellType(TimeCellType);\r\nregisterCellType(DropdownCellType);\r\nregisterCellType(DateCellType);\r\n\r\nregisterPlugin(ExportFile);\r\nregisterPlugin(CopyPaste);\r\n\r\nconst getTime = (dateString: string, time: string) => {\r\n\tvar dateParts = dateString.split(\"/\");\r\n\tvar dateObject = new Date(\r\n\t\tdateParts[1] + \"/\" + dateParts[0] + \"/\" + dateParts[2]\r\n\t);\r\n\tfunction getSeconds(time: string): number {\r\n\t\tlet timeParts = time.split(\":\");\r\n\t\ttimeParts[3] = timeParts[2].split(\" \")[1];\r\n\t\ttimeParts[2] = timeParts[2].split(\" \")[0];\r\n\t\tlet seconds =\r\n\t\t\t(Number(timeParts[0]) * 60 + Number(timeParts[1])) * 60 +\r\n\t\t\tNumber(timeParts[2]);\r\n\t\tif (timeParts[3] === \"pm\" || timeParts[3] === \"PM\") seconds += 12 * 60 * 60;\r\n\t\treturn seconds;\r\n\t}\r\n\tdateObject.setTime(dateObject.getTime() + getSeconds(time) * 1000);\r\n\treturn dateObject.getTime();\r\n};\r\n\r\nconst makeParticipantsAndTeamsObj = (arr: any[]) => {\r\n\tlet t: any[] = [];\r\n\tlet p: any[] = [];\r\n\tfor (let i = 0; i < arr.indexOf(null); i += 2) {\r\n\t\tconst name = arr[i];\r\n\t\tconst team = arr[i + 1];\r\n\t\tt.push(team);\r\n\t\tp.push({ name, team });\r\n\t}\r\n\treturn { teams: t, participants: [p] };\r\n};\r\n\r\nconst makeEventsArrayForDatabase = (data: any[]) => {\r\n\tconst events = data.map((arr: any[]) => {\r\n\t\treturn {\r\n\t\t\tevent: arr[0],\r\n\t\t\tmatchType: arr[1],\r\n\t\t\ttitle: arr[2],\r\n\t\t\tsubtitle: arr[3],\r\n\t\t\tstartTime: getTime(arr[4], arr[5]),\r\n\t\t\tendTime: getTime(arr[4], arr[6]),\r\n\t\t\tteams: arr.slice(7, 9),\r\n\t\t\teventLink: arr[9],\r\n\t\t};\r\n\t});\r\n\treturn events;\r\n};\r\nconst makeAthlEventsArrayForDatabase = (data: any[]) => {\r\n\tconst events = data.map((arr: any[]) => {\r\n\t\treturn {\r\n\t\t\tevent: EventCatagories.ATHLETICS,\r\n\t\t\tathleticsEventType: arr[0],\r\n\t\t\ttitle: arr[1],\r\n\t\t\tstartTime: getTime(arr[2], arr[3]),\r\n\t\t\tendTime: getTime(arr[2], arr[4]),\r\n\t\t\t...makeParticipantsAndTeamsObj(arr.slice(5)),\r\n\t\t};\r\n\t});\r\n\treturn events;\r\n};\r\n\r\nconst ScheduleEditor = ({ teams }: { teams: Team[] }) => {\r\n\tconst hotRef = useRef<HotTable | null>(null);\r\n\tconst athlTableRef = useRef<HotTable | null>(null);\r\n\tconst setToast = useContext(ToastContext).setToastMessage;\r\n\tconst getAccessToken = useAuthHeader();\r\n\r\n\tconst [allEvents, setAllEvents] = useState<Event[]>([]);\r\n\tconst [athlEvents, setAthlEvents] = useState<Event[]>([]);\r\n\tconst [loading, setLoading] = useState(true);\r\n\r\n\tconst completedEventsIndexes = useMemo(() => {\r\n\t\tlet indexes: any[] = [];\r\n\t\tallEvents.forEach((e, i) => {\r\n\t\t\tif (e.isCompleted || e.isStarted) indexes.push(i);\r\n\t\t});\r\n\t\treturn indexes;\r\n\t}, [allEvents]);\r\n\tconst completedAthlEventsIndexes = useMemo(() => {\r\n\t\tlet indexes: any[] = [];\r\n\t\tathlEvents.forEach((e, i) => {\r\n\t\t\tif (e.isCompleted || e.isStarted) indexes.push(i);\r\n\t\t});\r\n\t\treturn indexes;\r\n\t}, [athlEvents]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst hot = hotRef?.current?.hotInstance;\r\n\t\thot?.updateSettings({\r\n\t\t\tcells(row, col) {\r\n\t\t\t\tlet cellProperties: any = {};\r\n\t\t\t\tif (completedEventsIndexes.includes(row)) {\r\n\t\t\t\t\tcellProperties.readOnly = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn cellProperties;\r\n\t\t\t},\r\n\t\t});\r\n\t}, [completedEventsIndexes]);\r\n\r\n\tconst formatForTable = (events: any[]) => {\r\n\t\tconst fEvents = events.map((e) => {\r\n\t\t\treturn {\r\n\t\t\t\t...e,\r\n\t\t\t\tdate: new Date(e.startTime).toLocaleDateString(\"en-GB\"),\r\n\t\t\t\tstartTime: new Date(e.startTime).toLocaleString(\"en-US\", {\r\n\t\t\t\t\thour: \"numeric\",\r\n\t\t\t\t\tminute: \"numeric\",\r\n\t\t\t\t\tsecond: \"numeric\",\r\n\t\t\t\t\thour12: true,\r\n\t\t\t\t}),\r\n\t\t\t\tendTime: new Date(e.endTime).toLocaleString(\"en-US\", {\r\n\t\t\t\t\thour: \"numeric\",\r\n\t\t\t\t\tminute: \"numeric\",\r\n\t\t\t\t\tsecond: \"numeric\",\r\n\t\t\t\t\thour12: true,\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\t\t});\r\n\t\tfEvents.forEach((e) => {\r\n\t\t\te.teams.forEach((team: any, i: number) => {\r\n\t\t\t\tconst key: string = \"team\" + i;\r\n\t\t\t\te[key] = team.name;\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn fEvents as Event[];\r\n\t};\r\n\r\n\tconst formatForAthlTable = (events: AthleticsEvent[]) => {\r\n\t\tconst fEvents: any[] = events.map((e) => {\r\n\t\t\treturn {\r\n\t\t\t\t...e,\r\n\t\t\t\tdate: new Date(e.startTime).toLocaleDateString(\"en-GB\"),\r\n\t\t\t\tstartTime: new Date(e.startTime).toLocaleString(\"en-US\", {\r\n\t\t\t\t\thour: \"numeric\",\r\n\t\t\t\t\tminute: \"numeric\",\r\n\t\t\t\t\tsecond: \"numeric\",\r\n\t\t\t\t\thour12: true,\r\n\t\t\t\t}),\r\n\t\t\t\tendTime: new Date(e.endTime).toLocaleString(\"en-US\", {\r\n\t\t\t\t\thour: \"numeric\",\r\n\t\t\t\t\tminute: \"numeric\",\r\n\t\t\t\t\tsecond: \"numeric\",\r\n\t\t\t\t\thour12: true,\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\t\t});\r\n\t\tfEvents.forEach((e) => {\r\n\t\t\te.participants[0].forEach((participant: any, i: number) => {\r\n\t\t\t\tlet key = \"participant\" + i;\r\n\t\t\t\te[key] = participant.name;\r\n\t\t\t\tkey = \"team\" + i;\r\n\t\t\t\te[key] = participant.team;\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn fEvents as Event[];\r\n\t};\r\n\r\n\tconst fetchEvents = async () => {\r\n\t\tconst result: Event[] = (await API.GetEvents()).data;\r\n\t\tconst otherEvents = result.filter(\r\n\t\t\t(e) => e.event !== EventCatagories.ATHLETICS\r\n\t\t);\r\n\t\tconst athlEvents = result.filter(\r\n\t\t\t(e) => e.event === EventCatagories.ATHLETICS\r\n\t\t);\r\n\t\tsetAllEvents(formatForTable(otherEvents));\r\n\t\tsetAthlEvents(formatForAthlTable(athlEvents as AthleticsEvent[]));\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst saveTableData = async () => {\r\n\t\tconst hot = hotRef?.current?.hotInstance;\r\n\t\tconst athlTable = athlTableRef?.current?.hotInstance;\r\n\t\tconst allRows = hot?.getData()!;\r\n\t\tconst athlRows = athlTable?.getData()!;\r\n\t\tconst notCompletedEventsRows = allRows.filter(\r\n\t\t\t(row: any[], i) => !completedEventsIndexes.includes(i)\r\n\t\t);\r\n\t\tconst notCompletedAthlEventsRows = athlRows.filter(\r\n\t\t\t(row: any[], i) => !completedAthlEventsIndexes.includes(i)\r\n\t\t);\r\n\t\tconst validRows = notCompletedEventsRows!.filter((arr) => arr[0] !== null);\r\n\t\tconst validAthlRows = notCompletedAthlEventsRows!.filter(\r\n\t\t\t(arr) => arr[0] !== null\r\n\t\t);\r\n\t\tif (validRows?.length === 0 && validAthlRows?.length === 0) {\r\n\t\t\t//set schedule as empty\r\n\t\t\ttry {\r\n\t\t\t\tAPI.PostSchedule([], getAccessToken());\r\n\t\t\t\tsetToast(\"Updated Schedule Successfully!\");\r\n\t\t\t} catch (error: any) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tsetToast(JSON.parse(error.request.response).message);\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tsetToast(\"Could not connect with the Server\");\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfor (let i = 0; i < validRows!.length; i++) {\r\n\t\t\tconst row: any[] = validRows![i];\r\n\t\t\tlet last = row.length;\r\n\t\t\tlast = row.indexOf(null, 2) !== -1 ? row.indexOf(null, 2) : last;\r\n\t\t\tlast =\r\n\t\t\t\trow.indexOf(\"\", 2) !== -1 && row.indexOf(\"\", 2) < last\r\n\t\t\t\t\t? row.indexOf(\"\", 2)\r\n\t\t\t\t\t: last;\r\n\t\t\tif (last <= 8) {\r\n\t\t\t\tsetToast(\"Incomplete Details in a Row!\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < validAthlRows!.length; i++) {\r\n\t\t\tconst row: any[] = validAthlRows![i];\r\n\t\t\tlet last = row.length;\r\n\t\t\tlast = row.indexOf(null, 1) !== -1 ? row.indexOf(null, 1) : last;\r\n\t\t\tlast =\r\n\t\t\t\trow.indexOf(\"\", 1) !== -1 && row.indexOf(\"\", 1) < last\r\n\t\t\t\t\t? row.indexOf(\"\", 1)\r\n\t\t\t\t\t: last;\r\n\t\t\tif (last <= 8 || (last - 5) % 2 !== 0) {\r\n\t\t\t\tsetToast(\"Incomplete Details in a Row!\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst data = [\r\n\t\t\t...makeEventsArrayForDatabase(validRows),\r\n\t\t\t...makeAthlEventsArrayForDatabase(validAthlRows),\r\n\t\t];\r\n\t\t//data to be sent to the server\r\n\t\ttry {\r\n\t\t\tAPI.PostSchedule(data, getAccessToken());\r\n\t\t\tsetToast(\"Updated Schedule Successfully!\");\r\n\t\t} catch (error: any) {\r\n\t\t\ttry {\r\n\t\t\t\tsetToast(JSON.parse(error.request.response).message);\r\n\t\t\t} catch {\r\n\t\t\t\tsetToast(\"Could not connect with the Server\");\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst updateEventsStatus = (data: string) => {\r\n\t\t\tconst eventToBeUpdated = JSON.parse(data);\r\n\t\t\tsetAllEvents((prev) =>\r\n\t\t\t\tprev.map((event) =>\r\n\t\t\t\t\teventToBeUpdated.eventID === event._id\r\n\t\t\t\t\t\t? { ...event, isStarted: eventToBeUpdated.isStarted }\r\n\t\t\t\t\t\t: event\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t};\r\n\t\tsocket.on(\"eventStartOrEnd\", updateEventsStatus);\r\n\t\tfetchEvents();\r\n\r\n\t\treturn () => {\r\n\t\t\tsocket.off(\"eventStartOrEnd\", updateEventsStatus);\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"usersContainer\">\r\n\t\t\t<div className=\"top\" style={{ fontWeight: \"600\" }}>\r\n\t\t\t\tSchedule Table\r\n\t\t\t</div>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<>Loading All Events Data..</>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\tstyle={{ marginTop: \"5px\" }}\r\n\t\t\t\t\t\tonClick={saveTableData}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"tableContainer\"\r\n\t\t\t\t\t\tstyle={{ overflowX: \"hidden\", maxHeight: \"80vh\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<HotTable\r\n\t\t\t\t\t\t\tcopyPaste={true}\r\n\t\t\t\t\t\t\tref={hotRef}\r\n\t\t\t\t\t\t\tdata={allEvents}\r\n\t\t\t\t\t\t\tstyle={{ marginTop: \"5px\", boxSizing: \"border-box\" }}\r\n\t\t\t\t\t\t\trowHeaders={true}\r\n\t\t\t\t\t\t\tcolumns={[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"event\",\r\n\t\t\t\t\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\t\t\t\t\tsource: Object.values(EventCatagories).filter(\r\n\t\t\t\t\t\t\t\t\t\t(s) => s !== EventCatagories.ATHLETICS\r\n\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"matchType\",\r\n\t\t\t\t\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\t\t\t\t\tsource: Object.values(MatchTypes),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{ data: \"title\", type: \"text\" },\r\n\t\t\t\t\t\t\t\t{ data: \"subtitle\", type: \"text\" },\r\n\t\t\t\t\t\t\t\t{ data: \"date\", type: \"date\", correctFormat: true },\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"startTime\",\r\n\t\t\t\t\t\t\t\t\ttype: \"time\",\r\n\t\t\t\t\t\t\t\t\ttimeFormat: \"h:mm:ss a\",\r\n\t\t\t\t\t\t\t\t\tcorrectFormat: true,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"endTime\",\r\n\t\t\t\t\t\t\t\t\ttype: \"time\",\r\n\t\t\t\t\t\t\t\t\ttimeFormat: \"h:mm:ss a\",\r\n\t\t\t\t\t\t\t\t\tcorrectFormat: true,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"team0\",\r\n\t\t\t\t\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\t\t\t\t\tsource: teams.map((team) => team.name),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"team1\",\r\n\t\t\t\t\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\t\t\t\t\tsource: teams.map((team) => team.name),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{ data: \"eventLink\", type: \"text\" },\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\tcolHeaders={[\r\n\t\t\t\t\t\t\t\t\"Event\",\r\n\t\t\t\t\t\t\t\t\"MatchType?\",\r\n\t\t\t\t\t\t\t\t\"Name\",\r\n\t\t\t\t\t\t\t\t\"Subtitle\",\r\n\t\t\t\t\t\t\t\t\"Date\",\r\n\t\t\t\t\t\t\t\t\"Start Time\",\r\n\t\t\t\t\t\t\t\t\"End Time\",\r\n\t\t\t\t\t\t\t\t\"Team 1\",\r\n\t\t\t\t\t\t\t\t\"Team 2\",\r\n\t\t\t\t\t\t\t\t\"Score Link (for Cricket)\",\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\tminSpareRows={2}\r\n\t\t\t\t\t\t\tcolWidths={[150, 100, 150, 150, 100, 100, 100, 150, 150, 250]}\r\n\t\t\t\t\t\t\tlicenseKey=\"non-commercial-and-evaluation\" // for non-commercial use only\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"tableContainer\"\r\n\t\t\t\t\t\tstyle={{ overflowX: \"hidden\", maxHeight: \"80vh\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h3>Athletics Events Table</h3>\r\n\t\t\t\t\t\t<HotTable\r\n\t\t\t\t\t\t\tref={athlTableRef}\r\n\t\t\t\t\t\t\tdata={athlEvents}\r\n\t\t\t\t\t\t\tstyle={{ marginTop: \"5px\", boxSizing: \"border-box\" }}\r\n\t\t\t\t\t\t\trowHeaders={true}\r\n\t\t\t\t\t\t\tcolumns={[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"athleticsEventType\",\r\n\t\t\t\t\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\t\t\t\t\tsource: Object.values(AthleticsEventTypes),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"title\",\r\n\t\t\t\t\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\t\t\t\t\tsource: Object.values(AthleticsRounds),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{ data: \"date\", type: \"date\", correctFormat: true },\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"startTime\",\r\n\t\t\t\t\t\t\t\t\ttype: \"time\",\r\n\t\t\t\t\t\t\t\t\ttimeFormat: \"h:mm:ss a\",\r\n\t\t\t\t\t\t\t\t\tcorrectFormat: true,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"endTime\",\r\n\t\t\t\t\t\t\t\t\ttype: \"time\",\r\n\t\t\t\t\t\t\t\t\ttimeFormat: \"h:mm:ss a\",\r\n\t\t\t\t\t\t\t\t\tcorrectFormat: true,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"participant0\",\r\n\t\t\t\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"team0\",\r\n\t\t\t\t\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\t\t\t\t\tsource: teams.map((team) => team.name),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"participant1\",\r\n\t\t\t\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"team1\",\r\n\t\t\t\t\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\t\t\t\t\tsource: teams.map((team) => team.name),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"participant2\",\r\n\t\t\t\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"team2\",\r\n\t\t\t\t\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\t\t\t\t\tsource: teams.map((team) => team.name),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"participant3\",\r\n\t\t\t\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"team3\",\r\n\t\t\t\t\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\t\t\t\t\tsource: teams.map((team) => team.name),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"participant4\",\r\n\t\t\t\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"team4\",\r\n\t\t\t\t\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\t\t\t\t\tsource: teams.map((team) => team.name),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"participant5\",\r\n\t\t\t\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"team5\",\r\n\t\t\t\t\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\t\t\t\t\tsource: teams.map((team) => team.name),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"participant6\",\r\n\t\t\t\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"team6\",\r\n\t\t\t\t\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\t\t\t\t\tsource: teams.map((team) => team.name),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"participant7\",\r\n\t\t\t\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"team7\",\r\n\t\t\t\t\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\t\t\t\t\tsource: teams.map((team) => team.name),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"participant8\",\r\n\t\t\t\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"team8\",\r\n\t\t\t\t\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\t\t\t\t\tsource: teams.map((team) => team.name),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"participant9\",\r\n\t\t\t\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: \"team9\",\r\n\t\t\t\t\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\t\t\t\t\tsource: teams.map((team) => team.name),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\tcolHeaders={[\r\n\t\t\t\t\t\t\t\t\"Event\",\r\n\t\t\t\t\t\t\t\t\"Round\",\r\n\t\t\t\t\t\t\t\t\"Date\",\r\n\t\t\t\t\t\t\t\t\"Start Time\",\r\n\t\t\t\t\t\t\t\t\"End Time\",\r\n\t\t\t\t\t\t\t\t\"Participant 1\",\r\n\t\t\t\t\t\t\t\t\"Team\",\r\n\t\t\t\t\t\t\t\t\"Participant 2\",\r\n\t\t\t\t\t\t\t\t\"Team\",\r\n\t\t\t\t\t\t\t\t\"Participant 3\",\r\n\t\t\t\t\t\t\t\t\"Team\",\r\n\t\t\t\t\t\t\t\t\"Participant 4\",\r\n\t\t\t\t\t\t\t\t\"Team\",\r\n\t\t\t\t\t\t\t\t\"Participant 5\",\r\n\t\t\t\t\t\t\t\t\"Team\",\r\n\t\t\t\t\t\t\t\t\"Participant 6\",\r\n\t\t\t\t\t\t\t\t\"Team\",\r\n\t\t\t\t\t\t\t\t\"Participant 7\",\r\n\t\t\t\t\t\t\t\t\"Team\",\r\n\t\t\t\t\t\t\t\t\"Participant 8\",\r\n\t\t\t\t\t\t\t\t\"Team\",\r\n\t\t\t\t\t\t\t\t\"Participant 9\",\r\n\t\t\t\t\t\t\t\t\"Team\",\r\n\t\t\t\t\t\t\t\t\"Participant 10\",\r\n\t\t\t\t\t\t\t\t\"Team\",\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\tminSpareRows={2}\r\n\t\t\t\t\t\t\tcolWidths={[\r\n\t\t\t\t\t\t\t\t150, 150, 100, 100, 100, 200, 130, 200, 130, 200, 130, 200, 130,\r\n\t\t\t\t\t\t\t\t200, 130, 200, 130, 200, 130, 200, 130, 200, 130, 200, 130,\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\tlicenseKey=\"non-commercial-and-evaluation\" // for non-commercial use only\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ScheduleEditor;\r\n","import { useEffect, useState } from \"react\";\r\nimport Event from \"../types/Event\";\r\nimport { useAuthHeader } from \"react-auth-kit\";\r\nimport API from \"../Utilities/ApiEndpoints\";\r\nimport { formatEventName } from \"../types/EventCategories\";\r\nimport \"./LogItem.css\";\r\n\r\ninterface Log {\r\n\teventID: string;\r\n\tuserName: string;\r\n\tprevScore: any;\r\n\tcurrentScore: any;\r\n}\r\n\r\ninterface LogItemProps {\r\n\tlogs: Log[];\r\n\teventID: string;\r\n}\r\n\r\nconst LogItem: React.FC<LogItemProps> = ({ logs, eventID }) => {\r\n\tconst [event, setEvent] = useState<Event>();\r\n\tconst getAccessToken = useAuthHeader();\r\n\tconst [dialogueOpen, setDialogueOpen] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tAPI.GetEventByID(getAccessToken(), eventID).then((data) => {\r\n\t\t\tconsole.log(data.data);\r\n\t\t\tsetEvent(data.data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tif (!event) return <div>Loading...</div>;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{dialogueOpen && (\r\n\t\t\t\t<div className=\"dialogue\">\r\n\t\t\t\t\t<div className=\"dialogue-box\">\r\n\t\t\t\t\t\t<div className=\"dialogue-box-head\">\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{formatEventName(event.event)} {event.title} {event.subtitle}{\" \"}\r\n\t\t\t\t\t\t\t\tResult history\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName=\"dialogue-close\"\r\n\t\t\t\t\t\t\t\tonClick={() => setDialogueOpen(false)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t&times;\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"dialogue-body\">\r\n\t\t\t\t\t\t\t{logs.map((log, i) => (\r\n\t\t\t\t\t\t\t\t<div key={i} className=\"log\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"log-text\">\r\n\t\t\t\t\t\t\t\t\t\tChanged by <strong>{log.userName}</strong>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"log-body\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"log-previous-score\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div>Previous Score</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<code>{JSON.stringify(log.prevScore, null, 2)}</code>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"log-current-score\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div>Current Score</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<code>{JSON.stringify(log.currentScore, null, 2)}</code>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div className=\"log-item\" onClick={() => setDialogueOpen(true)}>\r\n\t\t\t\tClick to show{\" \"}\r\n\t\t\t\t<strong>\r\n\t\t\t\t\t{formatEventName(event.event)} {event.title} {event.subtitle}\r\n\t\t\t\t</strong>{\" \"}\r\n\t\t\t\tscore update history\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default LogItem;\r\n","import { useEffect, useState } from \"react\";\r\nimport API from \"../../../Utilities/ApiEndpoints\";\r\nimport { useAuthHeader } from \"react-auth-kit\";\r\nimport LogItem from \"../../../components/LogItem\";\r\n\r\nconst LogsViewer = () => {\r\n\tconst [logs, setLogs] = useState<any>([]);\r\n\tconst getAccessToken = useAuthHeader();\r\n\r\n\tuseEffect(() => {\r\n\t\t// setLogs(await API.GetLogs(getAccessToken()));\r\n\t\tAPI.GetLogs(getAccessToken()).then((res) => {\r\n\t\t\tlet eventGroupedLogs: any = {};\r\n\r\n\t\t\tres.data.forEach((log: any) => {\r\n\t\t\t\tif (eventGroupedLogs[log.eventID] === undefined) {\r\n\t\t\t\t\teventGroupedLogs[log.eventID] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\teventGroupedLogs[log.eventID].push(log);\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log(Object.values(eventGroupedLogs));\r\n\t\t\tsetLogs(eventGroupedLogs);\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"usersContainer\">\r\n\t\t\t<section className=\"top\">Score Edit Logs</section>\r\n\t\t\t<section className=\"main\">\r\n\t\t\t\t{Object.keys(logs).map((eventID) => (\r\n\t\t\t\t\t<LogItem key={eventID} logs={logs[eventID]} eventID={eventID} />\r\n\t\t\t\t))}\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LogsViewer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Route, Routes, useNavigate, useParams } from \"react-router\";\r\nimport SideBar from \"../../components/Sidebar\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { UserRole } from \"../../types/UserRole\";\r\nimport \"./AdminDashboard.css\";\r\nimport PeopleAltIcon from \"@mui/icons-material/PeopleAlt\";\r\nimport ScoreboardIcon from \"@mui/icons-material/Scoreboard\";\r\nimport Diversity2Icon from \"@mui/icons-material/Diversity2\";\r\nimport TableChartIcon from \"@mui/icons-material/TableChart\";\r\nimport AssignmentIcon from '@mui/icons-material/Assignment';\r\nimport Users from \"./Users\";\r\nimport EditScores from \"./EditScores\";\r\nimport { useAuthHeader, useAuthUser, useSignOut } from \"react-auth-kit\";\r\nimport { AuthStateUserObject } from \"react-auth-kit/dist/types\";\r\nimport { User } from \"../../types/User\";\r\nimport UserRoleChip from \"../../components/UserRoleChip\";\r\nimport API from \"../../Utilities/ApiEndpoints\";\r\nimport { getRefreshToken } from \"../../Utilities/AuthUtils\";\r\nimport { ToastContext } from \"../../Utilities/ToastContext\";\r\nimport Teams from \"./Teams\";\r\nimport { Team } from \"../../types/Team\";\r\nimport ScheduleEditor from \"./ScheduleEditor\";\r\nimport LogsViewer from \"./components/LogsViewer\";\r\n\r\nconst AdminDashboard = () => {\r\n\tconst urlParam = useParams();\r\n\tconst navigate = useNavigate();\r\n\tconst signOut = useSignOut();\r\n\tconst setToast = useContext(ToastContext).setToastMessage;\r\n\tconst auth = useAuthUser() as () => AuthStateUserObject;\r\n\tconst user = useRef(auth() as User);\r\n\tconst getAccessToken = useAuthHeader();\r\n\r\n\tconst [showProfileDialog, setShowProfileDialog] = useState(false);\r\n\tconst [allUsers, setAllUsers] = useState<User[]>([]);\r\n\tconst [allTeams, setAllTeams] = useState<Team[]>([]);\r\n\r\n\tconst SideBarItems = useRef([\r\n\t\t...(user.current.role === UserRole.ADMIN\r\n\t\t\t? [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"Users\",\r\n\t\t\t\t\tlinkTo: \"users\",\r\n\t\t\t\t\ticon: PeopleAltIcon,\r\n\t\t\t\t},\r\n\t\t\t]\r\n\t\t\t: []),\r\n\t\t{\r\n\t\t\ttitle: \"Edit Scores\",\r\n\t\t\tlinkTo: \"edit_scores\",\r\n\t\t\ticon: ScoreboardIcon,\r\n\t\t},\r\n\t\t...(user.current.role === UserRole.ADMIN\r\n\t\t\t? [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"Teams\",\r\n\t\t\t\t\tlinkTo: \"teams\",\r\n\t\t\t\t\ticon: Diversity2Icon,\r\n\t\t\t\t},\r\n\t\t\t]\r\n\t\t\t: []),\r\n\t\t...(user.current.role === UserRole.ADMIN\r\n\t\t\t? [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"Schedule\",\r\n\t\t\t\t\tlinkTo: \"schedule\",\r\n\t\t\t\t\ticon: TableChartIcon,\r\n\t\t\t\t},\r\n\t\t\t]\r\n\t\t\t: []),\r\n\t\t...(user.current.role === UserRole.ADMIN\r\n\t\t\t? [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"Logs\",\r\n\t\t\t\t\tlinkTo: \"logs\",\r\n\t\t\t\t\ticon: AssignmentIcon,\r\n\t\t\t\t},\r\n\t\t\t]\r\n\t\t\t: []),\r\n\t]);\r\n\r\n\tconst getRoutes = (): { linkTo: string; element: React.JSX.Element }[] => {\r\n\t\treturn [\r\n\t\t\t...(user.current.role === UserRole.ADMIN\r\n\t\t\t\t? [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlinkTo: \"users\",\r\n\t\t\t\t\t\telement: (\r\n\t\t\t\t\t\t\t<Users\r\n\t\t\t\t\t\t\t\tonUserAdd={handleAddUser}\r\n\t\t\t\t\t\t\t\tonDelete={handleUserDelete}\r\n\t\t\t\t\t\t\t\tusers={allUsers}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t},\r\n\t\t\t\t]\r\n\t\t\t\t: []),\r\n\t\t\t{\r\n\t\t\t\tlinkTo: \"edit_scores\",\r\n\t\t\t\telement: <EditScores />,\r\n\t\t\t},\r\n\t\t\t...(user.current.role === UserRole.ADMIN\r\n\t\t\t\t? [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlinkTo: \"teams\",\r\n\t\t\t\t\t\telement: (\r\n\t\t\t\t\t\t\t<Teams\r\n\t\t\t\t\t\t\t\tteams={allTeams}\r\n\t\t\t\t\t\t\t\tonTeamAdd={handleAddTeam}\r\n\t\t\t\t\t\t\t\tonTeamDelete={handleDeleteTeam}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t},\r\n\t\t\t\t]\r\n\t\t\t\t: []),\r\n\t\t\t...(user.current.role === UserRole.ADMIN\r\n\t\t\t\t? [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlinkTo: \"schedule\",\r\n\t\t\t\t\t\telement: <ScheduleEditor teams={allTeams} />,\r\n\t\t\t\t\t},\r\n\t\t\t\t]\r\n\t\t\t\t: []),\r\n\t\t\t...(user.current.role === UserRole.ADMIN\r\n\t\t\t\t? [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlinkTo: \"logs\",\r\n\t\t\t\t\t\telement: <LogsViewer />,\r\n\t\t\t\t\t},\r\n\t\t\t\t]\r\n\t\t\t\t: []),\r\n\t\t];\r\n\t};\r\n\r\n\tconst fetchUsers = async () => {\r\n\t\tconst result = (await API.GetUsers(getAccessToken())).data;\r\n\t\tconst Users: User[] = result.map((obj: any) => {\r\n\t\t\treturn {\r\n\t\t\t\tname: obj.name,\r\n\t\t\t\tusername: obj.username,\r\n\t\t\t\trole: obj.role,\r\n\t\t\t\tpassword: obj.password,\r\n\t\t\t};\r\n\t\t});\r\n\t\tsetAllUsers(Users);\r\n\t};\r\n\r\n\tconst fetchTeams = async () => {\r\n\t\tconst result = (await API.GetTeams(getAccessToken())).data;\r\n\t\tconst Teams: Team[] = result.map((obj: any) => {\r\n\t\t\treturn {\r\n\t\t\t\t_id: obj._id,\r\n\t\t\t\tname: obj.name,\r\n\t\t\t\tmedals: { ...obj.medals },\r\n\t\t\t\tpoints: obj.points,\r\n\t\t\t};\r\n\t\t});\r\n\t\tsetAllTeams(Teams);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (user.current.role === UserRole.ADMIN) {\r\n\t\t\tfetchUsers();\r\n\t\t\tfetchTeams();\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!urlParam[\"*\"]) navigate(SideBarItems.current[0].linkTo); //navigate to the first sidebar item if /admin visited\r\n\t}, []);\r\n\r\n\tconst handleLogout = async () => {\r\n\t\tnavigate(\"/login\");\r\n\t\tawait API.Logout({\r\n\t\t\trefreshToken: getRefreshToken(),\r\n\t\t});\r\n\t\tsetToast(\"Logged Out\");\r\n\t\tsignOut();\r\n\t};\r\n\r\n\tconst handleAddUser = async (userToAdd: User, password: string) => {\r\n\t\ttry {\r\n\t\t\tawait API.CreateUserWithUsernameAndPassword({\r\n\t\t\t\tname: userToAdd.name,\r\n\t\t\t\tusername: userToAdd.username,\r\n\t\t\t\trole: userToAdd.role,\r\n\t\t\t\tpassword: password,\r\n\t\t\t\taccessToken: getAccessToken(),\r\n\t\t\t});\r\n\t\t\tawait fetchUsers();\r\n\t\t\tsetToast(\"Added User \" + userToAdd.username);\r\n\t\t} catch (error: any) {\r\n\t\t\ttry {\r\n\t\t\t\tsetToast(JSON.parse(error.request.response).message);\r\n\t\t\t} catch {\r\n\t\t\t\tsetToast(\"Could not connect with the Server\");\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleUserDelete = async (userToDelete: User) => {\r\n\t\tif (userToDelete.username === user.current.username) {\r\n\t\t\tsetToast(\"You Cant Delete Yourself!\");\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tawait API.DeleteUser(userToDelete.username, getAccessToken());\r\n\t\t\t\tawait fetchUsers();\r\n\t\t\t\tsetToast(\"Deleted User \" + userToDelete.username);\r\n\t\t\t} catch (error: any) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tsetToast(JSON.parse(error.request.response).message);\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tsetToast(\"Could not connect with the Server\");\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleAddTeam = async (teamToAdd: Team) => {\r\n\t\ttry {\r\n\t\t\tawait API.AddTeam(getAccessToken(), teamToAdd);\r\n\t\t\tawait fetchTeams();\r\n\t\t\tsetToast(\"Added Team \" + teamToAdd.name);\r\n\t\t} catch (error: any) {\r\n\t\t\ttry {\r\n\t\t\t\tsetToast(JSON.parse(error.request.response).message);\r\n\t\t\t} catch {\r\n\t\t\t\tsetToast(\"Could not connect with the Server\");\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDeleteTeam = async (teamToDelete: Team) => {\r\n\t\ttry {\r\n\t\t\tawait API.DeleteTeam(getAccessToken(), teamToDelete);\r\n\t\t\tawait fetchTeams();\r\n\t\t\tsetToast(\"Deleted Team \" + teamToDelete.name);\r\n\t\t} catch (error: any) {\r\n\t\t\ttry {\r\n\t\t\t\tsetToast(JSON.parse(error.request.response).message);\r\n\t\t\t} catch {\r\n\t\t\t\tsetToast(\"Could not connect with the Server\");\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"admin-container\">\r\n\t\t\t<SideBar items={SideBarItems.current} />\r\n\t\t\t<section className=\"admin-content\">\r\n\t\t\t\t<section className=\"floatingDialogBox\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\tonClick={() => setShowProfileDialog((prev) => !prev)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"user-name-text\">{user.current.name}</span>{\" \"}\r\n\t\t\t\t\t\t<UserRoleChip role={user.current.role} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{showProfileDialog && (\r\n\t\t\t\t\t\t<div style={{ margin: \"10px\" }}>\r\n\t\t\t\t\t\t\tUsername:\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t{user.current.username}\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={handleLogout}\r\n\t\t\t\t\t\t\t\tstyle={{ marginTop: \"5px\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</section>\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t{getRoutes().map(\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlinkTo,\r\n\t\t\t\t\t\t\t\telement,\r\n\t\t\t\t\t\t\t}: { linkTo: string; element: React.JSX.Element },\r\n\t\t\t\t\t\t\ti: number\r\n\t\t\t\t\t\t) => (\r\n\t\t\t\t\t\t\t<Route key={i} path={linkTo} element={element} />\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Routes>\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import { io } from \"socket.io-client\";\r\nimport { ServerURL } from \"./ApiEndpoints\";\r\n\r\nexport const socket = io(ServerURL);\r\n","import { StartingDate } from \"../UpcomingEventsViewer\";\r\nimport ChessEvent, { ChessScore } from \"../../types/ChessEvent\";\r\nimport \"./LiveEventBox.css\";\r\nimport GridOnIcon from \"@mui/icons-material/GridOn\";\r\n\r\nconst ChessEventBox = ({\r\n\tevent,\r\n\tisAdmin,\r\n\tonScoreUpdate,\r\n}: {\r\n\tisAdmin?: boolean;\r\n\tonScoreUpdate?: (score: ChessScore) => void;\r\n\tevent: ChessEvent;\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"liveEventBox chess\">\r\n\t\t\t<span className=\"eventCategory\">\r\n\t\t\t\t<GridOnIcon />\r\n\t\t\t\tChess\r\n\t\t\t</span>\r\n\t\t\t<h3 className=\"fjalla\">{event.title}</h3>\r\n\t\t\t<h3 style={{ color: \"red\" }} className=\"fjalla\">\r\n\t\t\t\t{event.subtitle} | Day{\" \"}\r\n\t\t\t\t{new Date(event.startTime).getDate() - StartingDate + 1} -{\" \"}\r\n\t\t\t\t{new Date(event.startTime).toLocaleString(\"en-US\", {\r\n\t\t\t\t\thour: \"numeric\",\r\n\t\t\t\t\tminute: \"numeric\",\r\n\t\t\t\t\thour12: true,\r\n\t\t\t\t})}{\" \"}\r\n\t\t\t</h3>\r\n\r\n\t\t\t<hr className=\"hr\" />\r\n\t\t\t<div className=\"footballScoresContainer\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3 className=\"fjalla\">{event.teams[0].name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\" fjalla VS\">VS</p>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3 className=\"fjalla\">{event.teams[1].name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr className=\"hr\" />\r\n\t\t\t<div className=\"footballScoresContainer\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span className=\"fjalla\">{event.score.teamA_points}</span>\r\n\t\t\t\t\t{isAdmin && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonScoreUpdate!({\r\n\t\t\t\t\t\t\t\t\t\t...event.score,\r\n\t\t\t\t\t\t\t\t\t\tteamA_points: event.score.teamA_points + 0.5,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAdd 0.5\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tstyle={{ marginTop: \"5px\" }}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonScoreUpdate!({\r\n\t\t\t\t\t\t\t\t\t\t...event.score,\r\n\t\t\t\t\t\t\t\t\t\tteamA_points: event.score.teamA_points - 0.5,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMinus 0.5\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\" fjalla VS\"></p>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span className=\"fjalla\">{event.score.teamB_points}</span>\r\n\t\t\t\t\t{isAdmin && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonScoreUpdate!({\r\n\t\t\t\t\t\t\t\t\t\t...event.score,\r\n\t\t\t\t\t\t\t\t\t\tteamB_points: event.score.teamB_points + 0.5,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAdd 0.5\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tstyle={{ marginTop: \"5px\" }}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonScoreUpdate!({\r\n\t\t\t\t\t\t\t\t\t\t...event.score,\r\n\t\t\t\t\t\t\t\t\t\tteamB_points: event.score.teamB_points - 0.5,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMinus 0.5\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChessEventBox;\r\n","import { StartingDate } from \"../UpcomingEventsViewer\";\r\nimport FootballEvent, { FootballScore } from \"../../types/FootballEvent\";\r\nimport \"./LiveEventBox.css\";\r\nimport SportsSoccerIcon from \"@mui/icons-material/SportsSoccer\";\r\n\r\nconst FootballEventBox = ({\r\n\tevent,\r\n\tisAdmin,\r\n\tonScoreUpdate,\r\n}: {\r\n\tisAdmin?: boolean;\r\n\tonScoreUpdate?: (score: FootballScore) => void;\r\n\tevent: FootballEvent;\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"liveEventBox\">\r\n\t\t\t<span className=\"eventCategory\">\r\n\t\t\t\t<SportsSoccerIcon />\r\n\t\t\t\tFootball\r\n\t\t\t</span>\r\n\t\t\t<h3 className=\"fjalla\">{event.title}</h3>\r\n\t\t\t<h3 style={{ color: \"red\" }} className=\"fjalla\">\r\n\t\t\t\t{event.subtitle} | Day{\" \"}\r\n\t\t\t\t{new Date(event.startTime).getDate() - StartingDate + 1} -{\" \"}\r\n\t\t\t\t{new Date(event.startTime).toLocaleString(\"en-US\", {\r\n\t\t\t\t\thour: \"numeric\",\r\n\t\t\t\t\tminute: \"numeric\",\r\n\t\t\t\t\thour12: true,\r\n\t\t\t\t})}{\" \"}\r\n\t\t\t</h3>\r\n\r\n\t\t\t<hr className=\"hr\" />\r\n\t\t\t<div className=\"footballScoresContainer\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3 className=\"fjalla\">{event.teams[0].name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\" fjalla VS\">VS</p>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3 className=\"fjalla\">{event.teams[1].name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr className=\"hr\" />\r\n\t\t\t<div className=\"footballScoresContainer\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span className=\"fjalla\">{event.score.teamA_points}</span>\r\n\t\t\t\t\t{isAdmin && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonScoreUpdate!({\r\n\t\t\t\t\t\t\t\t\t\t...event.score,\r\n\t\t\t\t\t\t\t\t\t\tteamA_points: event.score.teamA_points + 1,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAdd 1\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tstyle={{ marginTop: \"5px\" }}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonScoreUpdate!({\r\n\t\t\t\t\t\t\t\t\t\t...event.score,\r\n\t\t\t\t\t\t\t\t\t\tteamA_points: event.score.teamA_points - 1,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMinus 1\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\" fjalla VS\"></p>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span className=\"fjalla\">{event.score.teamB_points}</span>\r\n\t\t\t\t\t{isAdmin && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonScoreUpdate!({\r\n\t\t\t\t\t\t\t\t\t\t...event.score,\r\n\t\t\t\t\t\t\t\t\t\tteamB_points: event.score.teamB_points + 1,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAdd 1\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tstyle={{ marginTop: \"5px\" }}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonScoreUpdate!({\r\n\t\t\t\t\t\t\t\t\t\t...event.score,\r\n\t\t\t\t\t\t\t\t\t\tteamB_points: event.score.teamB_points - 1,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMinus 1\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FootballEventBox;\r\n","import { StartingDate } from \"../UpcomingEventsViewer\";\r\nimport EventCatagories from \"../../types/EventCategories\";\r\nimport SquashEvent, { SquashScore } from \"../../types/SquashEvent\";\r\nimport \"./LiveEventBox.css\";\r\nimport SportsTennisIcon from \"@mui/icons-material/SportsTennis\";\r\n\r\nconst SquashEventBox = ({\r\n\tevent,\r\n\tisAdmin,\r\n\tonScoreUpdate,\r\n}: {\r\n\tisAdmin?: boolean;\r\n\tonScoreUpdate?: (score: SquashScore) => void;\r\n\tevent: SquashEvent;\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"liveEventBox squash\">\r\n\t\t\t<span className=\"eventCategory\">\r\n\t\t\t\t<SportsTennisIcon />\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{event.event === EventCatagories.SQUASH_MEN\r\n\t\t\t\t\t\t? \"Men's Squash\"\r\n\t\t\t\t\t\t: \"Women's Squash\"}\r\n\t\t\t\t</span>\r\n\t\t\t</span>\r\n\t\t\t<h3 className=\"fjalla\">{event.title}</h3>\r\n\t\t\t<h3 style={{ color: \"red\" }} className=\"fjalla\">\r\n\t\t\t\t{event.subtitle} | Day{\" \"}\r\n\t\t\t\t{new Date(event.startTime).getDate() - StartingDate + 1} -{\" \"}\r\n\t\t\t\t{new Date(event.startTime).toLocaleString(\"en-US\", {\r\n\t\t\t\t\thour: \"numeric\",\r\n\t\t\t\t\tminute: \"numeric\",\r\n\t\t\t\t\thour12: true,\r\n\t\t\t\t})}{\" \"}\r\n\t\t\t</h3>\r\n\r\n\t\t\t<hr className=\"hr\" />\r\n\t\t\t<div className=\"footballScoresContainer\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3 className=\"fjalla\">{event.teams[0].name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\" fjalla VS\">VS</p>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3 className=\"fjalla\">{event.teams[1].name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr className=\"hr\" />\r\n\t\t\t<div className=\"footballScoresContainer\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span className=\"fjalla\">{event.score.teamA_points}</span>\r\n\t\t\t\t\t{isAdmin && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonScoreUpdate!({\r\n\t\t\t\t\t\t\t\t\t\t...event.score,\r\n\t\t\t\t\t\t\t\t\t\tteamA_points: event.score.teamA_points + 1,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAdd 1\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tstyle={{ marginTop: \"5px\" }}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonScoreUpdate!({\r\n\t\t\t\t\t\t\t\t\t\t...event.score,\r\n\t\t\t\t\t\t\t\t\t\tteamA_points: event.score.teamA_points - 1,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMinus 1\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\" fjalla VS\"></p>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span className=\"fjalla\">{event.score.teamB_points}</span>\r\n\t\t\t\t\t{isAdmin && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonScoreUpdate!({\r\n\t\t\t\t\t\t\t\t\t\t...event.score,\r\n\t\t\t\t\t\t\t\t\t\tteamB_points: event.score.teamB_points + 1,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAdd 1\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tstyle={{ marginTop: \"5px\" }}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonScoreUpdate!({\r\n\t\t\t\t\t\t\t\t\t\t...event.score,\r\n\t\t\t\t\t\t\t\t\t\tteamB_points: event.score.teamB_points - 1,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMinus 1\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SquashEventBox;\r\n","import { StartingDate } from \"../UpcomingEventsViewer\";\r\nimport EventCatagories from \"../../types/EventCategories\";\r\nimport TennisEvent, { TennisScore } from \"../../types/TennisEvent\";\r\nimport \"./LiveEventBox.css\";\r\nimport SportsTennisIcon from \"@mui/icons-material/SportsTennis\";\r\n\r\nconst TennisEventBox = ({\r\n\tevent,\r\n\tisAdmin,\r\n\tonScoreUpdate,\r\n}: {\r\n\tisAdmin?: boolean;\r\n\tonScoreUpdate?: (score: TennisScore) => void;\r\n\tevent: TennisEvent;\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"liveEventBox tennis\">\r\n\t\t\t<span className=\"eventCategory\">\r\n\t\t\t\t<SportsTennisIcon />\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{event.event === EventCatagories.TENNIS_MEN\r\n\t\t\t\t\t\t? \"Men's Tennis\"\r\n\t\t\t\t\t\t: \"Women's Tennis\"}\r\n\t\t\t\t</span>\r\n\t\t\t</span>\r\n\t\t\t<h3 className=\"fjalla\">\r\n\t\t\t\t{event.title} | {event.matchType}\r\n\t\t\t</h3>\r\n\t\t\t<h3 style={{ color: \"red\" }} className=\"fjalla\">\r\n\t\t\t\t{event.subtitle} | Day{\" \"}\r\n\t\t\t\t{new Date(event.startTime).getDate() - StartingDate + 1} -{\" \"}\r\n\t\t\t\t{new Date(event.startTime).toLocaleString(\"en-US\", {\r\n\t\t\t\t\thour: \"numeric\",\r\n\t\t\t\t\tminute: \"numeric\",\r\n\t\t\t\t\thour12: true,\r\n\t\t\t\t})}{\" \"}\r\n\t\t\t</h3>\r\n\r\n\t\t\t<hr className=\"hr\" />\r\n\t\t\t<div className=\"footballScoresContainer\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3 className=\"fjalla\">{event.teams[0].name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\" fjalla VS\">VS</p>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3 className=\"fjalla\">{event.teams[1].name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr className=\"hr\" />\r\n\t\t\t<div className=\"footballScoresContainer\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span className=\"fjalla\">{event.score.teamA_points}</span>\r\n\t\t\t\t\t{isAdmin && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonScoreUpdate!({\r\n\t\t\t\t\t\t\t\t\t\t...event.score,\r\n\t\t\t\t\t\t\t\t\t\tteamA_points: event.score.teamA_points + 1,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAdd 1\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tstyle={{ marginTop: \"5px\" }}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonScoreUpdate!({\r\n\t\t\t\t\t\t\t\t\t\t...event.score,\r\n\t\t\t\t\t\t\t\t\t\tteamA_points: event.score.teamA_points - 1,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMinus 1\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\" fjalla VS\"></p>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span className=\"fjalla\">{event.score.teamB_points}</span>\r\n\t\t\t\t\t{isAdmin && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonScoreUpdate!({\r\n\t\t\t\t\t\t\t\t\t\t...event.score,\r\n\t\t\t\t\t\t\t\t\t\tteamB_points: event.score.teamB_points + 1,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAdd 1\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tstyle={{ marginTop: \"5px\" }}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonScoreUpdate!({\r\n\t\t\t\t\t\t\t\t\t\t...event.score,\r\n\t\t\t\t\t\t\t\t\t\tteamB_points: event.score.teamB_points - 1,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"styledButton\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMinus 1\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TennisEventBox;\r\n"],"names":["_ref","items","navigate","useNavigate","_jsx","className","children","map","item","i","_jsxs","tabIndex","onClick","linkTo","icon","fontSize","title","UserRole","role","style","backgroundColor","ADMIN","user","onDelete","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","name","setTimeout","password","username","UserRoleChip","users","onUserAdd","newName","setNewName","_useState3","_useState4","newUsername","setNewUsername","_useState5","_useState6","newPassword","setNewPassword","_useState7","_useState8","errorMsg","setErrorMsg","_useState9","SCORE_EDITOR","_useState10","newRole","setNewRole","addUserDialog","useRef","_addUserDialog$curren","current","showModal","ref","_addUserDialog$curren2","close","onSubmit","e","_addUserDialog$curren3","preventDefault","onChange","target","value","type","UserRow","AthleticsEventTypes","AthleticsEventWithDistance","getAccessToken","useAuthHeader","setToast","useContext","ToastContext","setToastMessage","loading","setLoading","allEvents","setAllEvents","liveEvents","useMemo","filter","event","isStarted","liveAbleEvents","isCompleted","startTime","Date","getTime","eventToToggle","setEventToToggle","confirmToggleDialog","athlEventWinnerDialog","openDialog","_confirmToggleDialog$","closeDialog","_confirmToggleDialog$2","_athlEventWinnerDialo","fetchEvents","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","API","GetEvents","sent","data","stop","apply","arguments","handleScoreUpdate","_ref2","_callee2","id","score","newEvents","_context2","UpdateScore","_id","_objectSpread","t0","JSON","parse","request","response","message","_unused","console","log","_x","_x2","useEffect","fontWeight","EventCatagories","ATHLETICS","athleticsEventType","subtitle","_ref3","_callee3","_confirmToggleDialog$4","_confirmToggleDialog$3","_context3","abrupt","ToggleEventStatus","_unused2","undefined","_x3","Object","values","includes","AthlEventParticipantDetailsForm","onSuccess","_athlEventWinnerDialo2","_Fragment","FOOTBALL","FootballEventBox","isAdmin","onScoreUpdate","CHESS","ChessEventBox","SQUASH_MEN","SQUASH_WOMEN","SquashEventBox","TENNIS_MEN","TENNIS_WOMEN","TennisEventBox","getEventBox","length","toLocaleDateString","toLocaleString","hour","minute","hour12","participants","p","team","teams","_callee4","_context4","endTime","_unused3","_ref5","setParticipants","getMillis","time","timeParts","split","millis","Number","_ref6","_callee5","newParticipants","_context5","forEach","detail","push","distance","SetAthleticsEventDetails","_unused4","_x4","op","onTeamAdd","onTeamDelete","addTeamDialog","confirmDeleteDialog","newTeamName","setNewTeamName","teamToDelete","setTeamToDelete","_addTeamDialog$curren2","_confirmDeleteDialog$","confirmTeamDelete","_confirmDeleteDialog$2","_addTeamDialog$curren","_addTeamDialog$curren3","_confirmDeleteDialog$3","TeamRow","MatchTypes","AthleticsRounds","registerCellType","TimeCellType","DropdownCellType","DateCellType","registerPlugin","ExportFile","CopyPaste","dateString","dateParts","dateObject","setTime","seconds","getSeconds","makeEventsArrayForDatabase","arr","matchType","slice","eventLink","makeAthlEventsArrayForDatabase","t","indexOf","makeParticipantsAndTeamsObj","hotRef","athlTableRef","athlEvents","setAthlEvents","completedEventsIndexes","indexes","completedAthlEventsIndexes","_hotRef$current","hot","hotInstance","updateSettings","cells","row","col","cellProperties","readOnly","formatForTable","events","fEvents","date","second","formatForAthlTable","participant","key","otherEvents","saveTableData","_hotRef$current2","_athlTableRef$current","athlTable","allRows","athlRows","notCompletedEventsRows","notCompletedAthlEventsRows","validRows","validAthlRows","last","_i","_row","_last","getData","PostSchedule","error","concat","_toConsumableArray","updateEventsStatus","eventToBeUpdated","eventID","socket","on","off","marginTop","overflowX","maxHeight","HotTable","copyPaste","boxSizing","rowHeaders","columns","source","s","correctFormat","timeFormat","colHeaders","minSpareRows","colWidths","licenseKey","logs","setEvent","dialogueOpen","setDialogueOpen","GetEventByID","then","formatEventName","userName","stringify","prevScore","currentScore","setLogs","GetLogs","res","eventGroupedLogs","keys","LogItem","urlParam","useParams","signOut","useSignOut","auth","useAuthUser","showProfileDialog","setShowProfileDialog","allUsers","setAllUsers","allTeams","setAllTeams","SideBarItems","PeopleAltIcon","ScoreboardIcon","Diversity2Icon","TableChartIcon","AssignmentIcon","fetchUsers","Users","GetUsers","obj","fetchTeams","Teams","GetTeams","medals","points","handleLogout","Logout","refreshToken","getRefreshToken","handleAddUser","_ref4","userToAdd","CreateUserWithUsernameAndPassword","accessToken","handleUserDelete","userToDelete","DeleteUser","handleAddTeam","_callee6","teamToAdd","_context6","AddTeam","handleDeleteTeam","_ref7","_callee7","_context7","DeleteTeam","_x5","SideBar","margin","Routes","element","EditScores","ScheduleEditor","LogsViewer","_ref8","Route","path","io","ServerURL","GridOnIcon","color","getDate","StartingDate","teamA_points","teamB_points","SportsSoccerIcon","SportsTennisIcon"],"sourceRoot":""}